{{- if .Values.fsm.cloudConnector.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fsmConnector.name" . }}
  namespace: {{ include "fsm.namespace" . }}
  labels:
    {{- include "fsm.labels" . | nindent 4 }}
    app: {{ include "fsmConnector.name" . }}
    flomesh.io/fsm-connector: {{ include "fsmConnector.provider" . }}
    meshName: {{ .Values.fsm.meshName }}
spec:
  {{- if not .Values.fsm.cloudConnector.autoScale.enable }}
  replicas: {{ .Values.fsm.cloudConnector.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "fsmConnector.name" . }}
      flomesh.io/fsm-connector: {{ include "fsmConnector.provider" . }}
  template:
    metadata:
      labels:
        {{- include "fsm.labels" . | nindent 8 }}
        app: {{ include "fsmConnector.name" . }}
        flomesh.io/fsm-connector: {{ include "fsmConnector.provider" . }}
  {{- if .Values.fsm.cloudConnector.podLabels }}
  {{- toYaml .Values.fsm.cloudConnector.podLabels | nindent 8 }}
  {{- end }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9091'
    spec:
      {{- if .Values.fsm.cloudConnector.affinity }}
      affinity:
      {{- toYaml .Values.fsm.cloudConnector.affinity | nindent 8 }}
      {{- end }}
      priorityClassName: system-node-critical
      serviceAccountName: {{ .Release.Name }}
      {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
      {{- include "restricted.securityContext" . | nindent 6 }}
      {{- end }}
      containers:
        - name: connector
          image: "{{ include "fsmConnector.image" . }}"
          imagePullPolicy: {{ .Values.fsm.image.pullPolicy }}
          ports:
            - name: "metrics"
              containerPort: 9091
          command: ['/fsm-connector']
          args: [
            "-verbosity", "{{.Values.fsm.controllerLogLevel}}",
            "-fsm-namespace", "{{ include "fsm.namespace" . }}",
            "-fsm-version", "{{ .Chart.AppVersion }}",
            "-mesh-name", "{{.Values.fsm.meshName}}",
            "-trust-domain", "{{.Values.fsm.trustDomain}}",
            "-leader-election={{.Values.fsm.cloudConnector.leaderElection}}",
            "-sdr-provider={{.Values.fsm.cloudConnector.connectorProvider}}",
            "-sdr-connector={{.Values.fsm.cloudConnector.connectorName}}",
          ]
          resources:
            limits:
              cpu: {{.Values.fsm.cloudConnector.resource.limits.cpu}}
              memory: {{.Values.fsm.cloudConnector.resource.limits.memory}}
            requests:
              cpu: {{.Values.fsm.cloudConnector.resource.requests.cpu}}
              memory: {{.Values.fsm.cloudConnector.resource.requests.memory}}
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9091
          livenessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9091
          env:
            # The CONNECTOR_POD_NAME env variable sets pod name dynamically, used by fsm-connector-consul to register events
            - name: CONNECTOR_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
    {{- if .Values.fsm.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.fsm.imagePullSecrets | indent 8 }}
    {{- end }}
      {{- if .Values.fsm.cloudConnector.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.fsm.cloudConnector.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.fsm.cloudConnector.tolerations }}
      tolerations:
      {{- toYaml .Values.fsm.cloudConnector.tolerations | nindent 8 }}
      {{- end }}
{{- end }}