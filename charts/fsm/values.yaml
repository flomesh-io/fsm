# Default values for fsm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

fsm:

  #
  # -- FSM control plane image parameters
  image:
    # -- Container image registry for control plane images
    registry: flomesh
    # -- Container image pull policy for control plane containers
    pullPolicy: IfNotPresent
    # -- Container image tag for control plane images
    tag: "1.1.0"
    # -- Image name defaults
    name:
      # -- fsm-controller's image name
      fsmController: fsm-controller
      # -- fsm-injector's image name
      fsmInjector: fsm-injector
      # -- Sidecar init container's image name
      fsmSidecarInit: fsm-sidecar-init
      # -- fsm-boostrap's image name
      fsmBootstrap: fsm-bootstrap
      # -- fsm-crds' image name
      fsmCRDs: fsm-crds
      # -- fsm-preinstall's image name
      fsmPreinstall: fsm-preinstall
      # -- fsm-healthcheck's image name
      fsmHealthcheck: fsm-healthcheck
      # -- fsm-interceptor's image name
      fsmInterceptor: fsm-interceptor
      # -- fsm-consul-connector's image name
      fsmConsulConnector: fsm-consul-connector
      # -- fsm-ingress's image name
      fsmIngress: fsm-ingress
      # -- fsm-gateway's image name
      fsmGateway: fsm-gateway
    # -- Image digest (defaults to latest compatible tag)
    digest:
      # -- fsm-controller's image digest
      fsmController: ""
      # -- fsm-injector's image digest
      fsmInjector: ""
      # -- Sidecar init container's image digest
      fsmSidecarInit: ""
      # -- fsm-crds' image digest
      fsmCRDs: ""
      # -- fsm-boostrap's image digest
      fsmBootstrap: ""
      # -- fsm-preinstall's image digest
      fsmPreinstall: ""
      # -- fsm-healthcheck's image digest
      fsmHealthcheck: ""
      # -- fsm-interceptor's image digest
      fsmInterceptor: ""
      # -- fsm-consul-connector's image digest
      fsmConsulConnector: ""
      # -- fsm-ingress's image digest
      fsmIngress: ""
      # -- fsm-gateway's image digest
      fsmGateway: ""

  # -- `fsm-controller` image pull secret
  imagePullSecrets: [ ]
  # -- The class of the FSM Sidecar Driver
  sidecarClass: pipy
  # -- Sidecar image for Linux workloads
  sidecarImage: ""
  # -- Sidecar drivers supported by fsm
  sidecarDrivers:
    - sidecarName: pipy
      # -- Sidecar image for Linux workloads
      sidecarImage: flomesh/pipy:0.90.2-41
      # -- Remote destination port on which the Discovery Service listens for new connections from Sidecars.
      proxyServerPort: 6060
  # -- Curl image for control plane init container
  curlImage: curlimages/curl

  # -- service-lb Image
  serviceLBImage: flomesh/mirrored-klipper-lb:v0.3.5


  # -- Pipy RepoServer
  repoServer:
    # -- Image used for Pipy RepoServer
    image: flomesh/pipy-repo:0.90.2-41
    # -- if false , Pipy RepoServer is installed within fsmController pod.
    standalone: false
    # -- ipaddr of host/service where Pipy RepoServer is installed
    ipaddr: "127.0.0.1"
    # -- codebase is the folder used by fsmController.
    codebase: ""

  pluginChains:
    inbound-tcp:
      - plugin: modules/inbound-tls-termination
        priority: 130
        disable: false
      - plugin: modules/inbound-tcp-routing
        priority: 120
        disable: false
      - plugin: modules/inbound-tcp-load-balancing
        priority: 110
        disable: false
      - plugin: modules/inbound-tcp-default
        priority: 100
        disable: false
    inbound-http:
      - plugin: modules/inbound-tls-termination
        priority: 180
      - plugin: modules/inbound-http-routing
        priority: 170
      - plugin: modules/inbound-metrics-http
        priority: 160
      - plugin: modules/inbound-tracing-http
        priority: 150
      - plugin: modules/inbound-logging-http
        priority: 140
      - plugin: modules/inbound-throttle-service
        priority: 130
      - plugin: modules/inbound-throttle-route
        priority: 120
      - plugin: modules/inbound-http-load-balancing
        priority: 110
      - plugin: modules/inbound-http-default
        priority: 100
    outbound-tcp:
      - plugin: modules/outbound-tcp-routing
        priority: 120
      - plugin: modules/outbound-tcp-load-balancing
        priority: 110
      - plugin: modules/outbound-tcp-default
        priority: 100
    outbound-http:
      - plugin: modules/outbound-http-routing
        priority: 160
      - plugin: modules/outbound-metrics-http
        priority: 150
      - plugin: modules/outbound-tracing-http
        priority: 140
      - plugin: modules/outbound-logging-http
        priority: 130
      - plugin: modules/outbound-circuit-breaker
        priority: 120
      - plugin: modules/outbound-http-load-balancing
        priority: 110
      - plugin: modules/outbound-http-default
        priority: 100

  #
  # -- FSM controller parameters
  fsmController:
    # -- FSM controller's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- FSM controller's container resource parameters. See https://docs.flomesh.io/docs/guides/ha_scale/scale/ for more details.
    resource:
      limits:
        cpu: "1.5"
        memory: "1G"
      requests:
        cpu: "0.5"
        memory: "128M"
    # -- FSM controller's pod labels
    podLabels: { }
    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
        # -- Average target memory utilization (%)
        targetAverageUtilization: 80

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - fsm-controller
              topologyKey: kubernetes.io/hostname
            weight: 100

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  #
  # -- FSM interceptor parameters
  fsmInterceptor:
    kernelTracing: true
    cniMode: true
    kindMode: false
    resource:
      limits:
        cpu: "1.5"
        memory: "1G"
      requests:
        cpu: "0.5"
        memory: "256M"
    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - fsm-controller
              topologyKey: kubernetes.io/hostname
            weight: 100

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]
  #
  # -- Prometheus parameters
  prometheus:
    # -- Prometheus's container resource parameters
    resources:
      limits:
        cpu: "1"
        memory: "2G"
      requests:
        cpu: "0.5"
        memory: "512M"
    # -- Prometheus service's port
    port: 7070
    # -- Prometheus data rentention configuration
    retention:
      # -- Prometheus data retention time
      time: 15d
    # -- Image used for Prometheus
    image: prom/prometheus:v2.34.0
    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                    - arm
                    - ppc64le
                    - s390x

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  # -- The trust domain to use as part of the common name when requesting new certificates.
  trustDomain: cluster.local

  certificateProvider:
    # -- The Certificate manager type: `tresor`, `vault` or `cert-manager`
    kind: tresor
    # -- Service certificate validity duration for certificate issued to workloads to communicate over mTLS
    serviceCertValidityDuration: 24h
    # -- Certificate key bit size for data plane certificates issued to workloads to communicate over mTLS
    certKeyBitSize: 2048

  #
  # -- Hashicorp Vault configuration
  vault:
    # --  Hashicorp Vault host/service - where Vault is installed
    host: ""
    # -- port to use to connect to Vault
    port: 8200
    # -- protocol to use to connect to Vault
    protocol: http
    # -- token that should be used to connect to Vault
    token: ""
    # -- Vault role to be used by Mesh
    role: flomesh
    # -- The Kubernetes secret storing the Vault token used in FSM. The secret must be located in the namespace of the FSM installation
    secret:
      # -- The Kubernetes secret name storing the Vault token used in FSM
      name: ""
      # -- The Kubernetes secret key with the value bring the Vault token
      key: ""

  #
  # -- cert-manager.io configuration
  certmanager:
    # --  cert-manager issuer namecert-manager issuer name
    issuerName: fsm-ca
    # -- cert-manager issuer kind
    issuerKind: Issuer
    # -- cert-manager issuer group
    issuerGroup: cert-manager.io

  # -- The Kubernetes secret name to store CA bundle for the root CA used in FSM
  caBundleSecretName: fsm-ca-bundle

  #
  # -- Grafana parameters
  grafana:
    # -- Grafana service's port
    port: 3000
    # -- Enable Remote Rendering in Grafana
    enableRemoteRendering: false
    # -- Image used for Grafana
    image: grafana/grafana:8.2.2
    # -- Image used for Grafana Renderer
    rendererImage: grafana/grafana-image-renderer:3.2.1

    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                    - arm
                    - ppc64le
                    - s390x

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  # -- Enable the debug HTTP server on FSM controller
  enableDebugServer: false

  # -- Enable permissive traffic policy mode
  enablePermissiveTrafficPolicy: true

  # -- Service access mode
  serviceAccessMode: domain

  # -- Traffic interception mode in the mesh
  trafficInterceptionMode: iptables

  # -- Enable egress in the mesh
  enableEgress: true

  # -- Enable reconciler for FSM's CRDs and mutating webhook
  enableReconciler: false

  # -- Deploy Consul Connector with FSM installation
  deployConsulConnector: false

  # -- Deploy Prometheus with FSM installation
  deployPrometheus: false

  # -- Deploy Grafana with FSM installation
  deployGrafana: false

  # -- Deploy Jaeger during FSM installation
  deployJaeger: false

  # -- Enable Fluent Bit sidecar deployment on FSM controller's pod
  enableFluentbit: false

  #
  # -- FluentBit parameters
  fluentBit:
    # -- Fluent Bit sidecar container name
    name: fluentbit-logger
    # -- Registry for Fluent Bit sidecar container
    registry: fluent
    # -- Fluent Bit sidecar image tag
    tag: 1.6.4
    # -- PullPolicy for Fluent Bit sidecar container
    pullPolicy: IfNotPresent
    # -- Fluent Bit output plugin
    outputPlugin: stdout
    # -- WorkspaceId for Fluent Bit output plugin to Log Analytics
    workspaceId: ""
    # -- Primary Key for Fluent Bit output plugin to Log Analytics
    primaryKey: ""
    # -- Enable proxy support toggle for Fluent Bit
    enableProxySupport: false
    # -- Optional HTTP proxy endpoint for Fluent Bit
    httpProxy: ""
    # -- Optional HTTPS proxy endpoint for Fluent Bit
    httpsProxy: ""

  # -- Identifier for the instance of a service mesh within a cluster
  meshName: fsm

  # -- Log level for the proxy sidecar. Non developers should generally never set this value. In production environments the LogLevel should be set to `error`
  sidecarLogLevel: error

  # -- Proxy mode for the proxy sidecar. Acceptable values are ['Localhost', 'PodIP']
  localProxyMode: Localhost

  # -- Local DNS Proxy improves the performance of your computer by caching the responses coming from your DNS servers
  localDNSProxy:
    enable: false

  # -- Sets the max data plane connections allowed for an instance of fsm-controller, set to 0 to not enforce limits
  maxDataPlaneConnections: 0

  # -- Sets the resync interval for regular proxy broadcast updates, set to 0s to not enforce any resync
  configResyncInterval: "90s"

  # -- Controller log verbosity
  controllerLogLevel: info

  # -- Enforce only deploying one mesh in the cluster
  enforceSingleMesh: true

  # -- Prefix used in name of the webhook configuration resources
  webhookConfigNamePrefix: fsm-webhook

  # -- Namespace to deploy FSM in. If not specified, the Helm release namespace is used.
  fsmNamespace: ""

  #
  # -- Tracing parameters
  #
  # The following section configures a destination collector where tracing
  # data is sent to. Current implementation supports only Zipkin format
  # backends (https://github.com/flomesh-io/fsm/issues/1596)
  tracing:
    # -- Toggles Sidecar's tracing functionality on/off for all sidecar proxies in the mesh
    enable: false
    # -- Address of the tracing collector service (must contain the namespace). When left empty, this is computed in helper template to "jaeger.<fsm-namespace>.svc.cluster.local". Please override for BYO-tracing as documented in tracing.md
    address: ""
    # -- Port of the tracing collector service
    port: 9411
    # -- Tracing collector's API path where the spans will be sent to
    endpoint: "/api/v2/spans"
    # -- Sampled Fraction
    sampledFraction: "1.0"
    # -- Image used for tracing
    image: jaegertracing/all-in-one

    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                    - ppc64le
                    - s390x

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  #
  # -- Remote logging parameters
  #
  # The following section configures a remote server where logging
  # data is sent to.
  remoteLogging:
    # -- Toggles Sidecar's remote logging functionality on/off for all sidecar proxies in the mesh
    enable: false
    # -- Address of the remote logging service (must contain the namespace). When left empty, this is computed in helper template to "remote-logging-service.<fsm-namespace>.svc.cluster.local".
    address: ""
    # -- Port of the remote logging service
    port: 30514
    # -- Remote logging's API path where the spans will be sent to
    endpoint: ""
    # -- The authorization for remote logging service
    authorization: ""
    # -- Sampled Fraction
    sampledFraction: "1.0"
    # -- Secret Name
    secretName: "fsm-remote-logging-secret"

  # -- Specifies a global list of IP ranges to exclude from outbound traffic interception by the sidecar proxy.
  # If specified, must be a list of IP ranges of the form a.b.c.d/x.
  outboundIPRangeExclusionList: [ ]

  # -- Specifies a global list of IP ranges to include for outbound traffic interception by the sidecar proxy.
  # If specified, must be a list of IP ranges of the form a.b.c.d/x.
  outboundIPRangeInclusionList: [ ]

  # -- Specifies a global list of ports to exclude from outbound traffic interception by the sidecar proxy.
  # If specified, must be a list of positive integers.
  outboundPortExclusionList: [ ]

  # -- Specifies a global list of ports to exclude from inbound traffic interception by the sidecar proxy.
  # If specified, must be a list of positive integers.
  inboundPortExclusionList: [ ]

  # -- Specifies a global list of network interface names to exclude for inbound and outbound traffic interception by the sidecar proxy.
  networkInterfaceExclusionList: [ ]

  #
  # -- FSM's sidecar injector parameters
  injector:
    # -- Sidecar injector's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- Sidecar injector's container resource parameters
    resource:
      limits:
        cpu: "0.5"
        memory: "64M"
      requests:
        cpu: "0.3"
        memory: "64M"
    # -- Sidecar injector's pod labels
    podLabels: { }
    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
        # -- Average target memory utilization (%)
        targetAverageUtilization: 80
    # -- Mutating webhook timeout
    webhookTimeoutSeconds: 20

    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - fsm-injector
              topologyKey: kubernetes.io/hostname
            weight: 100

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  # -- Run init container in privileged mode
  enablePrivilegedInitContainer: false

  #
  # -- FSM's cloud connector parameters
  cloudConnector:
    deriveNamespace: ""
    consul:
      httpAddr: 127.0.0.1:8500
      passingOnly: true
      filterTag: ""
      prefixTag: ""
      suffixTag: ""

    # -- Sidecar injector's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- Sidecar injector's container resource parameters
    resource:
      limits:
        cpu: "0.5"
        memory: "64M"
      requests:
        cpu: "0.3"
        memory: "64M"
    # -- Sidecar injector's pod labels
    podLabels: { }
    # -- Enable Pod Disruption Budget
    enablePodDisruptionBudget: false
    # -- Auto scale configuration
    autoScale:
      # -- Enable Autoscale
      enable: false
      # -- Minimum replicas for autoscale
      minReplicas: 1
      # -- Maximum replicas for autoscale
      maxReplicas: 5
      cpu:
        # -- Average target CPU utilization (%)
        targetAverageUtilization: 80
      memory:
        # -- Average target memory utilization (%)
        targetAverageUtilization: 80

    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - fsm-injector
              topologyKey: kubernetes.io/hostname
            weight: 100

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  #
  # -- Feature flags for experimental features
  featureFlags:
    # -- Enable FSM's Egress policy API.
    # When enabled, fine grained control over Egress (external) traffic is enforced
    enableEgressPolicy: true
    # -- Enable async proxy-service mapping
    enableAsyncProxyServiceMapping: false
    # -- Enables FSM's IngressBackend policy API.
    # When enabled, FSM will use the IngressBackend API allow ingress traffic to mesh backends
    enableIngressBackendPolicy: true
    # -- Enables FSM's AccessControl policy API.
    # When enabled, FSM will use the AccessControl API allow access control traffic to mesh backends
    enableAccessControlPolicy: false
    # When enabled, FSM can issue certificates for external services.
    enableAccessCertPolicy: false
    # -- Enable Sidecar active health checks
    enableSidecarActiveHealthChecks: false
    # -- Enables SnapshotCache feature for Sidecar xDS server.
    enableSnapshotCacheMode: false
    # -- Enable Retry Policy for automatic request retries
    enableRetryPolicy: false
    # -- Enable Plugin Policy for extend
    enablePluginPolicy: false
    # -- Enable the MeshRootCertificate to configure the FSM certificate provider
    enableMeshRootCertificate: false
    # -- Eneable AutoDefaultRoute
    enableAutoDefaultRoute: false

  # -- Node tolerations applied to control plane pods.
  # The specified tolerations allow pods to schedule onto nodes with matching taints.
  controlPlaneTolerations: [ ]

  #
  # -- FSM bootstrap parameters
  fsmBootstrap:
    # -- FSM bootstrap's replica count
    replicaCount: 1
    # -- FSM bootstrap's container resource parameters
    resource:
      limits:
        cpu: "0.5"
        memory: "128M"
      requests:
        cpu: "0.3"
        memory: "128M"
    # -- FSM bootstrap's pod labels
    podLabels: { }

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - fsm-bootstrap
              topologyKey: kubernetes.io/hostname
            weight: 100

    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  #
  # -- FSM Pipy Ingress Controller parameters
  fsmIngress:
    className: "pipy"
    enabled: false
    namespaced: false
    logLevel: info
    http:
      enabled: true
      port: 80
      containerPort: 8000
      nodePort: 30508
    tls:
      enabled: false
      port: 443
      containerPort: 8443
      nodePort: 30607
      mTLS: false
      sslPassthrough:
        enabled: false
        upstreamPort: 443
    # -- FSM Pipy Ingress Controller's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    service:
      name: fsm-ingress
      type: LoadBalancer
      annotations: {}
    # -- FSM Pipy Ingress Controller's container resource parameters.
    resources:
      limits:
        cpu: "2"
        memory: "1G"
      requests:
        cpu: "0.5"
        memory: "128M"
    # Extra env variables those will be appended to ingress container
    env:
      - name: GIN_MODE
        value: release
    # -- FSM Pipy Ingress Controller's pod labels
    podLabels: { }
    podAnnotations: { }
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      seccompProfile:
        type: RuntimeDefault
      # fsGroup: 2000
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
#        add:
#        - NET_BIND_SERVICE

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - fsm-ingress
                  - key: ingress.flomesh.io/namespaced
                    operator: In
                    values:
                      - "false"
              topologyKey: kubernetes.io/hostname
            weight: 100

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

    # -- Node selector applied to control plane pods.
    nodeSelector: { }

  #
  # -- FSM GatewayAPI parameters
  fsmGateway:
    enabled: false
    logLevel: info

  #
  # -- FSM ServiceLB parameters
  serviceLB:
    enabled: false

  #
  # -- FSM FLB parameters
  flb:
    enabled: false
    strictMode: false
    secretName: fsm-flb-secret
    baseUrl: http://localhost:1337
    username: admin
    password: admin
    k8sCluster: "UNKNOWN"
    defaultAddressPool: default
    defaultAlgo: rr

  #
  # -- FSM Egress Gateway parameters
  egressGateway:
    enabled: false
    name: fsm-egress-gateway
    # -- FSM Operator Manager's replica count (ignored when autoscale.enable is true)
    replicaCount: 1
    # -- FSM Operator Manager's container resource parameters.
    resources:
      limits:
        cpu: 500m
        memory: 128M
      requests:
        cpu: 100m
        memory: 64M
    podLabels: { }
    podAnnotations: { }
    mode: http2tunnel
    port: 1080
    adminPort: 6060
    logLevel: error

  #
  # -- FSM resource validator webhook configuration
  validatorWebhook:
    # -- Name of the ValidatingWebhookConfiguration
    webhookConfigurationName: ""

  #
  # -- FSM's preinstall hook parameters

  preinstall:
    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

  cleanup:
    ## Node labels for pod assignment
    ## Ref: https://kubernetes.io/docs/user-guide/node-selection/
    nodeSelector: { }

    ## Affinity settings for pod assignment
    ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64

    # -- Node tolerations applied to control plane pods.
    # The specified tolerations allow pods to schedule onto nodes with matching taints.
    tolerations: [ ]

#
# -- SMI configuration
smi:
  # -- Enables validation of SMI Traffic Target
  validateTrafficTarget: true

