{{- if and .Values.fsm.fsmIngress.enabled (not .Values.fsm.fsmGateway.enabled ) (semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion) }}
{{- if and (not .Values.fsm.fsmIngress.namespaced) (or .Values.fsm.fsmIngress.http.enabled .Values.fsm.fsmIngress.tls.enabled) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fsm-ingress
  namespace: {{ include "fsm.namespace" . }}
  labels:
    {{- include "fsm.labels" . | nindent 4 }}
    app: fsm-ingress
    meshName: {{ .Values.fsm.meshName }}
    networking.flomesh.io/namespaced: "false"
spec:
  replicas: {{ .Values.fsm.fsmIngress.replicaCount }}
  selector:
    matchLabels:
      app: fsm-ingress
      networking.flomesh.io/namespaced: "false"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.fsm.fsmIngress.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: fsm-ingress
        networking.flomesh.io/namespaced: "false"
        {{- with .Values.fsm.fsmIngress.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
      - name: wait-controller
        image: "{{ include "fsmCurl.image" . }}"
        imagePullPolicy: IfNotPresent
        {{- with .Values.fsm.fsmIngress.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        command:
          - curl
          - http://fsm-controller.{{ include "fsm.namespace" . }}:9091/health/ready
          - --connect-timeout
          - "2"
          - --retry
          - "100"
          - --retry-connrefused
          - --retry-delay
          - "5"
        resources:
          {{- toYaml .Values.fsm.fsmIngress.initResources | nindent 10 }}
      containers:
      - name: ingress
        image: {{ include "fsmIngress.image" . }}
        imagePullPolicy: {{ .Values.fsm.image.pullPolicy }}
        ports:
        {{- if and .Values.fsm.fsmIngress.http.enabled (and (not (empty .Values.fsm.fsmIngress.http.port)) (not (empty .Values.fsm.fsmIngress.http.containerPort))) }}
        - name: http
          containerPort: {{ .Values.fsm.fsmIngress.http.containerPort }}
        {{- end }}
        {{- if and .Values.fsm.fsmIngress.tls.enabled (and (not (empty .Values.fsm.fsmIngress.tls.port)) (not (empty .Values.fsm.fsmIngress.tls.containerPort))) }}
        - name: https
          containerPort: {{ .Values.fsm.fsmIngress.tls.containerPort }}
        {{- end }}
        - name: health
          containerPort: 8081
        args:
        - --verbosity={{ .Values.fsm.fsmIngress.logLevel }}
        - --fsm-namespace={{ include "fsm.namespace" . }}
        - --fsm-version={{ .Chart.AppVersion }}
        - --mesh-name={{.Values.fsm.meshName}}
        resources:
          {{- toYaml .Values.fsm.fsmIngress.resources | nindent 10 }}
        env:
        - name: FSM_NAMESPACE
          value: {{ include "fsm.namespace" . }}
        - name: FSM_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FSM_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- with .Values.fsm.fsmIngress.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.fsm.fsmIngress.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        livenessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          tcpSocket:
            port: {{ include "fsmIngress.heath.port" . }}
        readinessProbe:
          initialDelaySeconds: 5
          timeoutSeconds: 5
          tcpSocket:
            port: {{ include "fsmIngress.heath.port" . }}
      terminationGracePeriodSeconds: 60
      priorityClassName: system-node-critical
      {{- with .Values.fsm.fsmIngress.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}
      {{- with .Values.fsm.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fsm.fsmIngress.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fsm.fsmIngress.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fsm.fsmIngress.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}