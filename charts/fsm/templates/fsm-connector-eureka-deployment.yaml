{{- if .Values.fsm.cloudConnector.eureka.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fsmConnector.eureka.name" . }}
  namespace: {{ include "fsm.namespace" . }}
  labels:
    {{- include "fsm.labels" . | nindent 4 }}
    app: {{ include "fsmConnector.eureka.name" . }}
    meshName: {{ .Values.fsm.meshName }}
spec:
  {{- if not .Values.fsm.cloudConnector.autoScale.enable }}
  replicas: {{ .Values.fsm.cloudConnector.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "fsmConnector.eureka.name" . }}
  template:
    metadata:
      labels:
        {{- include "fsm.labels" . | nindent 8 }}
        app: {{ include "fsmConnector.eureka.name" . }}
  {{- if .Values.fsm.cloudConnector.podLabels }}
  {{- toYaml .Values.fsm.cloudConnector.podLabels | nindent 8 }}
  {{- end }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9091'
    spec:
      {{- if .Values.fsm.cloudConnector.affinity }}
      affinity:
      {{- toYaml .Values.fsm.cloudConnector.affinity | nindent 8 }}
      {{- end }}
      priorityClassName: system-node-critical
      serviceAccountName: {{ .Release.Name }}
      {{- if not (.Capabilities.APIVersions.Has "security.openshift.io/v1") }}
      {{- include "restricted.securityContext" . | nindent 6 }}
      {{- end }}
      initContainers:
        - name: init-{{ include "fsmConnector.eureka.name" . }}
          image: "{{ include "fsmCurl.image" . }}"
          command: ["curl", "http://fsm-bootstrap.{{ include "fsm.namespace" . }}.svc.cluster.local:9091/healthz", "--connect-timeout", "2", "--retry", "50", "--retry-connrefused", "--retry-delay", "5"]
      containers:
        - name: {{ include "fsmConnector.eureka.name" . }}
          image: "{{ include "fsmConnector.image" . }}"
          imagePullPolicy: {{ .Values.fsm.image.pullPolicy }}
          ports:
            - name: "sidecar-inject"
              containerPort: 9090
            - name: "metrics"
              containerPort: 9091
          command: ['/fsm-connector']
          args: [
            "-verbosity", "{{.Values.fsm.controllerLogLevel}}",
            "-fsm-namespace", "{{ include "fsm.namespace" . }}",
            "-fsm-version", "{{ .Chart.AppVersion }}",
            "-mesh-name", "{{.Values.fsm.meshName}}",
            "-trust-domain", "{{.Values.fsm.trustDomain}}",
            "-derive-namespace={{.Values.fsm.cloudConnector.eureka.deriveNamespace}}",
            "-as-internal-services={{.Values.fsm.cloudConnector.eureka.asInternalServices}}",
            "-sdr-provider=eureka",
            "-sdr-http-addr={{.Values.fsm.cloudConnector.eureka.httpAddr}}",
            "-sync-cloud-to-k8s={{.Values.fsm.cloudConnector.eureka.syncToK8S.enable}}",
            "-sync-cloud-to-k8s-cluster-id={{.Values.fsm.cloudConnector.eureka.syncToK8S.clusterId}}",
            "-sync-cloud-to-k8s-passing-only={{.Values.fsm.cloudConnector.eureka.syncToK8S.passingOnly}}",
            "-sync-cloud-to-k8s-filter-tag={{.Values.fsm.cloudConnector.eureka.syncToK8S.filterMetadata}}",
            "-sync-cloud-to-k8s-prefix-tag={{.Values.fsm.cloudConnector.eureka.syncToK8S.prefixMetadata}}",
            "-sync-cloud-to-k8s-suffix-tag={{.Values.fsm.cloudConnector.eureka.syncToK8S.suffixMetadata}}",
            "-sync-cloud-to-k8s-with-gateway={{.Values.fsm.cloudConnector.eureka.syncToK8S.withGateway.enable}}",
            "-sync-k8s-to-cloud={{.Values.fsm.cloudConnector.eureka.syncFromK8S.enable}}",
            "-sync-k8s-to-cloud-default-sync={{.Values.fsm.cloudConnector.eureka.syncFromK8S.defaultSync}}",
            "-sync-k8s-to-cloud-sync-cluster-ip-services={{.Values.fsm.cloudConnector.eureka.syncFromK8S.syncClusterIPServices}}",
            "-sync-k8s-to-cloud-sync-load-balancer-services-endpoints={{.Values.fsm.cloudConnector.eureka.syncFromK8S.syncLoadBalancerEndpoints}}",
            "-sync-k8s-to-cloud-node-port-sync-type={{.Values.fsm.cloudConnector.eureka.syncFromK8S.nodePortSyncType}}",
            "-sync-k8s-to-cloud-sync-ingress={{.Values.fsm.cloudConnector.eureka.syncFromK8S.syncIngress}}",
            "-sync-k8s-to-cloud-sync-ingress-load-balancer-ips={{.Values.fsm.cloudConnector.eureka.syncFromK8S.syncIngressLoadBalancerIPs}}",
            "-sync-k8s-to-cloud-add-service-prefix={{.Values.fsm.cloudConnector.eureka.syncFromK8S.addServicePrefix}}",
            "-sync-k8s-to-cloud-add-k8s-namespace-as-service-suffix={{.Values.fsm.cloudConnector.eureka.syncFromK8S.addK8SNamespaceAsServiceSuffix}}",
            {{- if .Values.fsm.cloudConnector.eureka.syncFromK8S.appendMetadata }}
            {{- range .Values.fsm.cloudConnector.eureka.syncFromK8S.appendMetadata }}
            "-sync-k8s-to-cloud-append-metadata-key={{ .key }}",
            "-sync-k8s-to-cloud-append-metadata-value={{ .value }}",
            {{- end }}
            {{- end }}
            {{- if .Values.fsm.cloudConnector.eureka.syncFromK8S.allowK8sNamespaces }}
            {{- range .Values.fsm.cloudConnector.eureka.syncFromK8S.allowK8sNamespaces }}
            "-sync-k8s-to-cloud-allow-k8s-namespaces={{ . }}",
            {{- end }}
            {{- end }}
            {{- if .Values.fsm.cloudConnector.eureka.syncFromK8S.denyK8sNamespaces }}
            {{- range .Values.fsm.cloudConnector.eureka.syncFromK8S.denyK8sNamespaces }}
            "-sync-k8s-to-cloud-deny-k8s-namespaces={{ . }}",
            {{- end }}
            {{- end }}
            "-sync-k8s-to-cloud-with-gateway={{.Values.fsm.cloudConnector.eureka.syncFromK8S.withGateway.enable}}",
          ]
          resources:
            limits:
              cpu: "{{.Values.fsm.cloudConnector.resource.limits.cpu}}"
              memory: "{{.Values.fsm.cloudConnector.resource.limits.memory}}"
            requests:
              cpu: "{{.Values.fsm.cloudConnector.resource.requests.cpu}}"
              memory: "{{.Values.fsm.cloudConnector.resource.requests.memory}}"
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9091
          livenessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /healthz
              port: 9091
          env:
            - name: CONTROLLER_SVC_NAME
              value: {{ include "fsmConnector.eureka.name" . }}
            # The CONNECTOR_POD_NAME env variable sets pod name dynamically, used by fsm-connector-eureka to register events
            - name: CONNECTOR_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
    {{- if .Values.fsm.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.fsm.imagePullSecrets | indent 8 }}
    {{- end }}
      {{- if .Values.fsm.cloudConnector.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.fsm.cloudConnector.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.fsm.cloudConnector.tolerations }}
      tolerations:
      {{- toYaml .Values.fsm.cloudConnector.tolerations | nindent 8 }}
      {{- end }}
{{- end }}