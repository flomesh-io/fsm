{
    "$schema": "http://json-schema.org/draft-07/schema",
    "type": "object",
    "title": "The FSM Helm chart values schema",
    "required": [
        "fsm",
        "smi"
    ],
    "definitions": {
        "containerResources": {
            "$id": "#/properties/definitions/properties/containerResources",
            "type": "object",
            "title": "The containerResources schema definition",
            "description": "The container's resource configuration",
            "required": [
                "limits",
                "requests"
            ],
            "properties": {
                "limits": {
                    "$id": "#/properties/definitions/properties/containerResources/properties/limits",
                    "type": "object",
                    "title": "The containerResources' limits schema",
                    "description": "The container's resource limits",
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "$id": "#/properties/definitions/properties/containerResources/properties/limits/properties/cpu",
                            "type": "string",
                            "title": "The containerResources' CPU limit schema",
                            "description": "The container's CPU limit"
                        },
                        "memory": {
                            "$id": "#/properties/definitions/properties/containerResources/properties/limits/properties/memory",
                            "type": "string",
                            "title": "The containerResources' memory limit schema",
                            "description": "The container's memory limit"
                        }
                    },
                    "additionalProperties": false
                },
                "requests": {
                    "$id": "#/properties/definitions/properties/containerResources/properties/requests",
                    "type": "object",
                    "title": "The containerResources' requests schema",
                    "description": "The container's request limits",
                    "required": [
                        "cpu",
                        "memory"
                    ],
                    "properties": {
                        "cpu": {
                            "$id": "#/properties/definitions/properties/containerResources/properties/requests/properties/cpu",
                            "type": "string",
                            "title": "The containerResources' CPU request schema",
                            "description": "The container's CPU request limit"
                        },
                        "memory": {
                            "$id": "#/properties/definitions/properties/containerResources/properties/requests/properties/memory",
                            "type": "string",
                            "title": "The containerResources' memory request schema",
                            "description": "The container's memory request limit"
                        }
                    },
                    "additionalProperties": false
                }
            }
        },
        "autoScale": {
            "$id": "#/properties/definitions/properties/autoScale",
            "type": "object",
            "title": "The autoScale schema",
            "description": "Autoscale configuration parameters",
            "required": [
                "enable"
            ],
            "properties": {
                "enable": {
                    "$id": "#/properties/definitions/properties/autoScale/properties/enable",
                    "type": "boolean",
                    "title": "Autoscale enable",
                    "description": "Indicates whether autoscale should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "minReplicas": {
                    "$id": "#/properties/definitions/properties/autoScale/properties/minReplicas",
                    "type": "integer",
                    "title": "Autoscale minimum replicas",
                    "description": "Indicates the minimum replicas for autoscale.",
                    "minimum": 1,
                    "maximum": 10,
                    "examples": [
                        1
                    ]
                },
                "maxReplicas": {
                    "$id": "#/properties/definitions/properties/autoScale/properties/maxReplicas",
                    "type": "integer",
                    "title": "Autoscale maximum replicase",
                    "description": "Indicates the maximum replicas for autoscale.",
                    "minimum": 1,
                    "maximum": 10,
                    "examples": [
                        5
                    ]
                },
                "cpu": {
                    "$id": "#/properties/definitions/properties/autoScale/properties/cpu",
                    "type": "object",
                    "title": "Autoscale CPU resource schema",
                    "description": "Autoscale CPU configuration",
                    "required": [
                        "targetAverageUtilization"
                    ],
                    "properties": {
                        "targetAverageUtilization": {
                            "$id": "#/properties/definitions/properties/autoScale/properties/cpu/properties/targetAverageUtilization",
                            "type": "integer",
                            "title": "Autoscale cpu targetAverageUtilization",
                            "description": "Indicates average target cpu utilization (percentage) for autoscale.",
                            "minimum": 0,
                            "maximum": 100,
                            "examples": [
                                80
                            ]
                        }
                    },
                    "additionalProperties": false
                },
                "memory": {
                    "$id": "#/properties/definitions/properties/autoScale/properties/memory",
                    "type": "object",
                    "title": "Autoscale memory resource schema",
                    "description": "Autoscale memory configuration",
                    "required": [
                        "targetAverageUtilization"
                    ],
                    "properties": {
                        "targetAverageUtilization": {
                            "$id": "#/properties/definitions/properties/autoScale/properties/memory/properties/targetAverageUtilization",
                            "type": "integer",
                            "title": "Autoscale memory targetAverageUtilization",
                            "description": "Indicates average target memory utilization (percentage) for autoscale.",
                            "minimum": 0,
                            "maximum": 100,
                            "examples": [
                                80
                            ]
                        }
                    },
                    "additionalProperties": false
                }
            }
        }
    },
    "properties": {
        "fsm": {
            "$id": "#/properties/fsm",
            "type": "object",
            "title": "The fsm schema",
            "description": "The top level required key in the values file.",
            "required": [
                "image",
                "sidecar",
                "pluginChains",
                "caBundleSecretName",
                "enableDebugServer",
                "enablePermissiveTrafficPolicy",
                "http1PerRequestLoadBalancing",
                "http2PerRequestLoadBalancing",
                "serviceAccessMode",
                "trafficInterceptionMode",
                "enableEgress",
                "enableReconciler",
                "deployPrometheus",
                "deployGrafana",
                "enableFluentbit",
                "fluentBit",
                "meshName",
                "maxDataPlaneConnections",
                "controllerLogLevel",
                "enforceSingleMesh",
                "deployJaeger",
                "tracing",
                "remoteLogging",
                "webhookConfigNamePrefix",
                "fsmController",
                "fsmInterceptor",
                "enablePrivilegedInitContainer",
                "injector",
                "fsmBootstrap",
                "fsmIngress",
                "fsmGateway",
                "egressGateway",
                "flb",
                "serviceLB",
                "featureFlags"
            ],
            "properties": {
                "fsmController": {
                    "$id": "#/properties/fsm/properties/fsmController",
                    "type": "object",
                    "title": "The fsmController schema",
                    "description": "The details of the fsmController.",
                    "required": [
                        "resource",
                        "initResources",
                        "repoResources"
                    ],
                    "properties": {
                        "replicaCount": {
                            "$id": "#/properties/fsm/properties/fsmController/properties/replicaCount",
                            "type": "integer",
                            "title": "The replicaCount schema",
                            "description": "The number of replicas of the fsm-controller pod",
                            "examples": [
                                1
                            ]
                        },
                        "resource": {
                            "$ref": "#/definitions/containerResources"
                        },
                        "initResources": {
                          "$ref": "#/definitions/containerResources"
                        },
                        "repoResources": {
                          "$ref": "#/definitions/containerResources"
                        },
                        "podLabels": {
                            "$id": "#/properties/fsm/properties/fsmController/properties/podLabels",
                            "type": "object",
                            "title": "The podLabels schema",
                            "description": "Labels for the fsmController pod.",
                            "default": {}
                        },
                        "enablePodDisruptionBudget": {
                            "$id": "#/properties/fsm/properties/fsmController/properties/enablePodDisruptionBudget",
                            "type": "boolean",
                            "title": "The enablePodDisruptionBudget schema",
                            "description": "Indicates whether Pod Disruption Budget should be enabled or not.",
                            "examples": [
                                false
                            ]
                        },
                        "autoScale": {
                            "$ref": "#/definitions/autoScale"
                        },
                        "affinity": {
                            "type": "object"
                        },
                        "tolerations": {
                            "type": "array"
                        }
                    },
                    "additionalProperties": false
                },
                "fsmInterceptor": {
                    "$id": "#/properties/fsm/properties/fsmInterceptor",
                    "type": "object",
                    "title": "The fsmInterceptor schema",
                    "description": "The details of the fsmInterceptor.",
                    "required": [
                        "resource"
                    ],
                    "properties": {
                        "resource": {
                            "$ref": "#/definitions/containerResources"
                        },
                        "podLabels": {
                            "$id": "#/properties/fsm/properties/fsmInterceptor/properties/podLabels",
                            "type": "object",
                            "title": "The podLabels schema",
                            "description": "Labels for the fsmInterceptor pod.",
                            "default": {}
                        },
                        "affinity": {
                            "type": "object"
                        },
                        "tolerations": {
                            "type": "array"
                        },
                        "kernelTracing": {
                            "$id": "#/properties/fsm/properties/fsmInterceptor/properties/kernelTracing",
                            "type": "boolean",
                            "title": "kernel tracing enable",
                            "description": "Indicates whether kernel tracing should be enabled or not.",
                            "examples": [
                                false
                            ]
                        },
                        "cniMode": {
                            "$id": "#/properties/fsm/properties/fsmInterceptor/properties/cniMode",
                            "type": "boolean",
                            "title": "cni plugin enable",
                            "description": "Indicates whether cni plugin should be enabled or not.",
                            "examples": [
                                false
                            ]
                        },
                        "kindMode": {
                            "$id": "#/properties/fsm/properties/fsmInterceptor/properties/kindMode",
                            "type": "boolean",
                            "title": "running kind cluster",
                            "description": "Indicates whether running kind cluster.",
                            "examples": [
                                false
                            ]
                        }
                    },
                    "additionalProperties": false
                },
                "image": {
                    "$id": "#/properties/fsm/properties/image",
                    "type": "object",
                    "title": "The image schema",
                    "description": "The details of the images to run.",
                    "examples": [
                        {
                            "registry": "flomesh",
                            "pullPolicy": "IfNotPresent",
                            "tag": "v0.4.2"
                        }
                    ],
                    "required": [
                        "registry",
                        "name",
                        "pullPolicy",
                        "tag",
                        "digest"
                    ],
                    "properties": {
                        "registry": {
                            "$id": "#/properties/fsm/properties/image/properties/registry",
                            "type": "string",
                            "title": "The registry schema",
                            "description": "The registry of the images to run.",
                            "examples": [
                                "flomesh"
                            ]
                        },
                        "name": {
                            "$id": "#/properties/fsm/properties/image/properties/name",
                            "type": "object",
                            "title": "Default image names",
                            "description": "Default image names for control plane.",
                            "required": [
                              "fsmController",
                              "fsmInjector",
                              "fsmSidecarInit",
                              "fsmBootstrap",
                              "fsmCRDs",
                              "fsmPreinstall",
                              "fsmHealthcheck",
                              "fsmInterceptor",
                              "fsmConnector",
                              "fsmIngress",
                              "fsmGateway",
                              "fsmCurl"
                            ],
                            "properties": {
                              "fsmController": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmController",
                                "type": "string",
                                "title": "fsm-controller's image names",
                                "description": "fsm-controller container's image names."
                              },
                              "fsmInjector": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmInjector",
                                "type": "string",
                                "title": "fsm-injector's image name",
                                "description": "fsm-injector container's image name."
                              },
                              "fsmSidecarInit": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmSidecarInit",
                                "type": "string",
                                "title": "fsm-fsmSidecarInit's image name",
                                "description": "fsm-fsmSidecarInit container's image name."
                              },
                              "fsmBootstrap": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmBootstrap",
                                "type": "string",
                                "title": "fsm-boostrap's image name",
                                "description": "fsm-bootstrap container's image name."
                              },
                              "fsmCRDs": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmCRDs",
                                "type": "string",
                                "title": "fsm-crds' image name",
                                "description": "fsm-crds container's image name."
                              },
                              "fsmPreinstall": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmPreinstall",
                                "type": "string",
                                "title": "fsm-preinstall's image name",
                                "description": "fsm-preinstall container's image name."
                              },
                              "fsmHealthcheck": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmHealthcheck",
                                "type": "string",
                                "title": "fsm-healthcheck's image name",
                                "description": "fsm-healthcheck container's image name."
                              },
                              "fsmInterceptor": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmInterceptor",
                                "type": "string",
                                "title": "fsm-interceptor's image name",
                                "description": "fsm-interceptor container's image name."
                              },
                              "fsmConnector": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmConnector",
                                "type": "string",
                                "title": "fsm-connector's image name",
                                "description": "fsm-connector container's image name."
                              },
                              "fsmIngress": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmIngress",
                                "type": "string",
                                "title": "fsm-ingress's image name",
                                "description": "fsm-connector container's image name."
                              },
                              "fsmGateway": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmGateway",
                                "type": "string",
                                "title": "fsm-gateway's image name",
                                "description": "fsm-gateway container's image name."
                              },
                              "fsmCurl": {
                                "$id": "#/properties/fsm/properties/image/properties/name/properties/fsmCurl",
                                "type": "string",
                                "title": "fsm-curl's image name",
                                "description": "fsm-curl container's image name."
                              }
                            }
                        },
                        "pullPolicy": {
                            "$id": "#/properties/fsm/properties/image/properties/pullPolicy",
                            "type": "string",
                            "title": "The pullPolicy schema",
                            "description": "The image pull policy.",
                            "pattern": "^(Always|Never|IfNotPresent)?$",
                            "examples": [
                                "IfNotPresent"
                            ]
                        },
                        "tag": {
                            "$id": "#/properties/fsm/properties/image/properties/tag",
                            "type": "string",
                            "title": "The tag schema",
                            "description": "The image tag to run.",
                            "examples": [
                                "v0.4.2"
                            ]
                        },
                        "digest": {
                            "$id": "#/properties/fsm/properties/image/properties/digest",
                            "type": "object",
                            "title": "Default image digests",
                            "description": "Default image digests for control plane.",
                            "required": [
                              "fsmController",
                              "fsmInjector",
                              "fsmSidecarInit",
                              "fsmCRDs",
                              "fsmBootstrap",
                              "fsmPreinstall",
                              "fsmHealthcheck",
                              "fsmInterceptor",
                              "fsmConnector",
                              "fsmIngress",
                              "fsmGateway",
                              "fsmCurl"
                            ],
                            "properties": {
                              "fsmController": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmController",
                                "type": "string",
                                "title": "fsm-controller's image digest",
                                "description": "fsm-controller container's image digest."
                              },
                              "fsmInjector": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmInjector",
                                "type": "string",
                                "title": "fsm-injector's image digest",
                                "description": "fsm-injector container's image digest."
                              },
                              "fsmSidecarInit": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmSidecarInit",
                                "type": "string",
                                "title": "fsm-fsmSidecarInit's image digest",
                                "description": "fsm-fsmSidecarInit container's image digest."
                              },
                              "fsmCRDs": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmCRDs",
                                "type": "string",
                                "title": "fsm-crds' image digest",
                                "description": "fsm-crds container's image digest."
                              },
                              "fsmBootstrap": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmBootstrap",
                                "type": "string",
                                "title": "fsm-boostrap's image digest",
                                "description": "fsm-bootstrap container's image digest."
                              },
                              "fsmPreinstall": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmPreinstall",
                                "type": "string",
                                "title": "fsm-preinstall's image digest",
                                "description": "fsm-preinstall container's image digest."
                              },
                              "fsmHealthcheck": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmHealthcheck",
                                "type": "string",
                                "title": "fsm-healthcheck's image digest",
                                "description": "fsm-healthcheck container's image digest."
                              },
                              "fsmInterceptor": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmInterceptor",
                                "type": "string",
                                "title": "fsm-interceptor's image digest",
                                "description": "fsm-interceptor container's image digest."
                              },
                              "fsmConnector": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmConnector",
                                "type": "string",
                                "title": "fsm-connector's image digest",
                                "description": "fsm-connector container's image digest."
                              },
                              "fsmIngress": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmIngress",
                                "type": "string",
                                "title": "fsm-ingress's image digest",
                                "description": "fsm-ingress container's image digest."
                              },
                              "fsmGateway": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmGateway",
                                "type": "string",
                                "title": "fsm-gateway's image digest",
                                "description": "fsm-gateway container's image digest."
                              },
                              "fsmCurl": {
                                "$id": "#/properties/fsm/properties/image/properties/digest/properties/fsmCurl",
                                "type": "string",
                                "title": "fsm-curl's image digest",
                                "description": "fsm-curl container's image digest."
                              }
                            }
                        }
                    },
                    "additionalProperties": false
                },
                "sidecar": {
                  "$id": "#/properties/fsm/properties/sidecar",
                  "type": "object",
                  "title": "The sidecar schema",
                  "description": "The class of the FSM Sidecar Driver.",
                  "required": [
                    "image",
                    "sidecarDisabledMTLS",
                    "sidecarLogLevel",
                    "sidecarTimeout"
                  ],
                  "properties": {
                    "image": {
                      "$id": "#/properties/fsm/properties/sidecar/properties/image",
                      "type": "object",
                      "title": "Pipy sidecar's image schema",
                      "description": "Image used for pipy sidecar",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/sidecar/properties/image/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/sidecar/properties/image/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/sidecar/properties/image/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    },
                    "initContainerImage": {
                      "$id": "#/properties/fsm/properties/sidecar/properties/initContainerImage",
                      "type": "object",
                      "title": "Init image schema",
                      "description": "Image used for init",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/sidecar/properties/initContainerImage/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/sidecar/properties/initContainerImage/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/sidecar/properties/initContainerImage/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    },
                    "sidecarDisabledMTLS": {
                      "$id": "#/properties/fsm/properties/sidecar/properties/sidecarDisabledMTLS",
                      "type": "boolean",
                      "title": "The sidecarDisabledMTLS schema",
                      "description": "The proxy side car runs without mTLS",
                      "examples": [
                        false
                      ]
                    },
                    "sidecarLogLevel": {
                      "$id": "#/properties/fsm/properties/sidecar/properties/sidecarLogLevel",
                      "type": "string",
                      "title": "The sidecarLogLevel schema",
                      "description": "Sidecar log level.",
                      "pattern": "^(trace|debug|info|warning|warn|error|critical|off)$",
                      "examples": [
                        "error"
                      ]
                    },
                    "sidecarTimeout": {
                      "$id": "#/properties/fsm/properties/sidecar/properties/sidecarTimeout",
                      "type": "integer",
                      "title": "The sidecarTimeout schema",
                      "description": "Sets connect/idle/read/write timeout",
                      "examples": [
                        "60"
                      ]
                    },
                    "resource": {
                      "$ref": "#/definitions/containerResources"
                    },
                    "initResources": {
                      "$ref": "#/definitions/containerResources"
                    },
                    "healthcheckResources": {
                      "$ref": "#/definitions/containerResources"
                    }
                  },
                  "additionalProperties": false
                },
                "pluginChains": {
                    "$id": "#/properties/fsm/properties/pluginChains",
                    "type": "object",
                    "title": "Plugin Chain Scheme",
                    "description": "Plugin Chain Scheme",
                    "additionalProperties": false,
                    "properties": {
                        "inbound-tcp": {
                            "$id": "#/properties/fsm/properties/pluginChains/inbound-tcp",
                            "type": "array",
                            "title": "Inbound TCP Plugin Chain Schema",
                            "description": "Inbound TCP Plugin Chain Schema",
                            "items": {
                                "type": "object",
                                "required": [
                                    "plugin",
                                    "priority"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "plugin": {
                                        "type": "string"
                                    },
                                    "priority": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "disable": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "inbound-http": {
                            "$id": "#/properties/fsm/properties/pluginChains/inbound-http",
                            "type": "array",
                            "title": "Inbound HTTP Plugin Chain Schema",
                            "description": "Inbound HTTP Plugin Chain Schema",
                            "items": {
                                "type": "object",
                                "required": [
                                    "plugin",
                                    "priority"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "plugin": {
                                        "type": "string"
                                    },
                                    "priority": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "disable": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "outbound-tcp": {
                            "$id": "#/properties/fsm/properties/pluginChains/outbound-tcp",
                            "type": "array",
                            "title": "Outbound TCP Plugin Chain Schema",
                            "description": "Outbound TCP Plugin Chain Schema",
                            "items": {
                                "type": "object",
                                "required": [
                                    "plugin",
                                    "priority"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "plugin": {
                                        "type": "string"
                                    },
                                    "priority": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "disable": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "outbound-http": {
                            "$id": "#/properties/fsm/properties/pluginChains/outbound-http",
                            "type": "array",
                            "title": "Outbound HTTP Plugin Chain Schema",
                            "description": "Outbound HTTP Plugin Chain Schema",
                            "items": {
                                "type": "object",
                                "required": [
                                    "plugin",
                                    "priority"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                    "plugin": {
                                        "type": "string"
                                    },
                                    "priority": {
                                        "type": "number",
                                        "minimum": 0
                                    },
                                    "disable": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "repoServer": {
                    "$id": "#/properties/fsm/properties/repoServer",
                    "type": "object",
                    "title": "Pipy repo server",
                    "description": "Pipy repo server.",
                    "required": [
                        "image",
                        "standalone",
                        "ipaddr",
                        "port",
                        "codebase"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "image": {
                        "$id": "#/properties/fsm/properties/repoServer/properties/image",
                        "type": "object",
                        "title": "Pipy repo server's image schema",
                        "description": "Image used for pipy repo server",
                        "required": [
                          "name",
                          "tag"
                        ],
                        "properties": {
                          "name": {
                            "$id": "#/properties/fsm/properties/repoServer/properties/image/properties/name",
                            "type": "string",
                            "title": "The name schema"
                          },
                          "registry": {
                            "$id": "#/properties/fsm/properties/repoServer/properties/image/properties/registry",
                            "type": "string",
                            "title": "The registry schema"
                          },
                          "tag": {
                            "$id": "#/properties/fsm/properties/repoServer/properties/image/properties/tag",
                            "type": "string",
                            "title": "The tag schema"
                          }
                        },
                        "additionalProperties": false
                      },
                      "standalone": {
                        "$id": "#/properties/fsm/properties/repoServer/properties/standalone",
                        "type": "boolean",
                        "title": "Install Mode of RepoServer",
                        "description": "if false , RepoServer is installed within fsmController pod.",
                        "examples": [
                          false
                        ]
                      },
                      "ipaddr": {
                        "$id": "#/properties/fsm/properties/repoServer/properties/ipaddr",
                        "type": "string",
                        "title": "The ipaddr schema for pipy repo server",
                        "description": "Ip address of the pipy repo server",
                        "examples": [
                          "127.0.0.1"
                        ]
                      },
                      "port": {
                        "$id": "#/properties/fsm/properties/repoServer/properties/port",
                        "type": "integer",
                        "title": "The port schema for pipy repo server",
                        "description": "Port of the pipy repo server",
                        "minimum": 1,
                        "maximum": 65535,
                        "examples": [
                          6060
                        ]
                      },
                      "codebase": {
                        "$id": "#/properties/fsm/properties/repoServer/properties/codebase",
                        "type": "string",
                        "title": "The codebase schema for pipy repo server",
                        "description": "Codebase is the folder used by fsmController.",
                        "examples": [
                          "/fsm1.3.7"
                        ]
                      }
                    }
                },
                "trustDomain": {
                    "$id": "#/properties/fsm/properties/trustDomain",
                    "type": "string",
                    "title": "The certificate issuance Trust Domain",
                    "description": "The trust domain to use as part of the common name when requesting new certificates.",
                    "examples": [
                        "cluster.local",
                        "example.com"
                    ]
                },
                "certificateProvider": {
                    "$id": "#/properties/fsm/properties/certificateProvider",
                    "type": "object",
                    "title": "The certificate provider schema",
                    "description": "Certificate provider configuration parameters",
                    "required": [
                        "kind",
                        "serviceCertValidityDuration",
                        "certKeyBitSize"
                    ],
                    "additionalProperties": false,
                    "properties": {
                        "kind": {
                            "$id": "#/properties/fsm/properties/certificateProvider/properties/kind",
                            "type": "string",
                            "title": "The certificate provider kind schema",
                            "description": "The certificate manager fsm-controller should use.",
                            "pattern": "^(tresor|vault|cert-manager)$",
                            "examples": [
                                "tresor"
                            ]
                        },
                        "serviceCertValidityDuration": {
                            "$id": "#/properties/fsm/properties/certificateProvider/properties/serviceCertValidityDuration",
                            "type": "string",
                            "title": "The serviceCertValidityDuration schema",
                            "description": "The service certificate validity duration.",
                            "examples": [
                                "24h"
                            ]
                        },
                        "certKeyBitSize": {
                            "$id": "#/properties/fsm/properties/certificateProvider/properties/certKeyBitSize",
                            "type": "integer",
                            "title": "The certKeyBitSize schema",
                            "description": "The key size for data plane certificates.",
                            "examples": [
                                2048
                            ]
                        }
                    }
                },
                "caBundleSecretName": {
                    "$id": "#/properties/fsm/properties/caBundleSecretName",
                    "type": "string",
                    "title": "The caBundleSecretName schema",
                    "description": "An explanation about the purpose of this instance.",
                    "examples": [
                        "fsm-ca-bundle"
                    ]
                },
                "enableDebugServer": {
                    "$id": "#/properties/fsm/properties/enableDebugServer",
                    "type": "boolean",
                    "title": "The enableDebugServer schema",
                    "description": "Indicates whether the Debug Server should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "enablePermissiveTrafficPolicy": {
                    "$id": "#/properties/fsm/properties/enablePermissiveTrafficPolicy",
                    "type": "boolean",
                    "title": "The enablePermissiveTrafficPolicy schema",
                    "description": "Indicates whether permissive traffic policy should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "http1PerRequestLoadBalancing": {
                  "$id": "#/properties/fsm/properties/http1PerRequestLoadBalancing",
                  "type": "boolean",
                  "title": "The http1PerRequestLoadBalancing schema",
                  "description": "Indicating if load balancing based on request is enabled for http1.",
                  "examples": [
                    false
                  ]
                },
                "http2PerRequestLoadBalancing": {
                  "$id": "#/properties/fsm/properties/http2PerRequestLoadBalancing",
                  "type": "boolean",
                  "title": "The http2PerRequestLoadBalancing schema",
                  "description": "Indicating if load balancing based on request is enabled for http2.",
                  "examples": [
                    true
                  ]
                },
                "serviceAccessMode": {
                    "$id": "#/properties/fsm/properties/serviceAccessMode",
                    "type": "string",
                    "title": "The serviceAccessMode schema",
                    "description": "Indicates service access mode.",
                    "examples": [
                        "domain"
                    ]
                },
                "trafficInterceptionMode": {
                    "$id": "#/properties/fsm/properties/trafficInterceptionMode",
                    "type": "string",
                    "title": "The trafficInterceptionMode schema",
                    "description": "Traffic interception mode in the mesh.",
                    "enum": [
                        "iptables",
                        "ebpf",
                        "none"
                    ],
                    "examples": [
                        "iptables"
                    ]
                },
                "enableEgress": {
                    "$id": "#/properties/fsm/properties/enableEgress",
                    "type": "boolean",
                    "title": "The enableEgress schema",
                    "description": "Indicates whether egress should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "enableReconciler": {
                    "$id": "#/properties/fsm/properties/enableReconciler",
                    "type": "boolean",
                    "title": "The enableReconciler schema",
                    "description": "Indicates whether FSM's reconciler should be enabled or not.",
                    "examples": [
                        false
                    ]
                },
                "deployPrometheus": {
                    "$id": "#/properties/fsm/properties/deployPrometheus",
                    "type": "boolean",
                    "title": "The deployPrometheus schema",
                    "description": "Indicates whether Prometheus should be installed and configured as part of the fsm control plane.",
                    "examples": [
                        false
                    ]
                },
                "deployGrafana": {
                    "$id": "#/properties/fsm/properties/deployGrafana",
                    "type": "boolean",
                    "title": "The deployGrafana schema",
                    "description": "Indicates whether Grafana should be installed and configured as part of the fsm control plane.",
                    "examples": [
                        false
                    ]
                },
                "enableFluentbit": {
                    "$id": "#/properties/fsm/properties/enableFluentbit",
                    "type": "boolean",
                    "title": "The enableFluentbit schema",
                    "description": "Indicates whether Fluent Bit log forwarding should be enabled",
                    "examples": [
                        false
                    ]
                },
                "fluentBit": {
                  "$id": "#/properties/fsm/properties/fluentBit",
                  "type": "object",
                  "title": "The Fluent Bit schema",
                  "description": "The default details of the Fluent Bit sidecar if enabled.",
                  "examples": [
                    {
                      "name": "fluentbit-logger",
                      "pullPolicy": "IfNotPresent",
                      "outputPlugin": "stdout",
                      "enableProxySupport": "false",
                      "httpProxy": "",
                      "httpsProxy": ""
                    }
                  ],
                  "required": [
                    "name",
                    "image",
                    "pullPolicy",
                    "outputPlugin",
                    "workspaceId",
                    "primaryKey",
                    "enableProxySupport",
                    "httpProxy",
                    "httpsProxy"
                  ],
                  "properties": {
                    "name": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/name",
                      "type": "string",
                      "title": "The name schema",
                      "description": "The name of the Fluent Bit container",
                      "examples": [
                        "fluentbit-logger"
                      ]
                    },
                    "image": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/image",
                      "type": "object",
                      "title": "FluentBit's image schema",
                      "description": "Image used for FluentBit",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/fluentBit/properties/image/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/fluentBit/properties/image/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/fluentBit/properties/image/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    },
                    "pullPolicy": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/pullPolicy",
                      "type": "string",
                      "title": "The pullPolicy schema",
                      "description": "The image pull policy.",
                      "pattern": "^(Always|Never|IfNotPresent)$",
                      "examples": [
                        "IfNotPresent"
                      ]
                    },
                    "outputPlugin": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/outputPlugin",
                      "type": "string",
                      "title": "The output plugin for Fluent Bit",
                      "description": "The log forwarding destination plugin for Fluent Bit",
                      "examples": [
                        "stdout"
                      ]
                    },
                    "workspaceId": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/workspaceId",
                      "type": "string",
                      "title": "The Fluent Bit workspaceId schema",
                      "description": "The workspace ID for Fluent Bit output plugin to Log Analytics"
                    },
                    "primaryKey": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/primaryKey",
                      "type": "string",
                      "title": "The Fluent Bit primaryKey schema",
                      "description": "The primary key for Fluent Bit output plugin to Log Analytics"
                    },
                    "enableProxySupport": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/enableProxySupport",
                      "type": "boolean",
                      "title": "The enableProxySupport output schema",
                      "description": "Indicates whether outbound proxy support should be configured for Fluent Bit",
                      "examples": [
                        false
                      ]
                    },
                    "httpProxy": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/httpProxy",
                      "type": "string",
                      "title": "The httpProxy schema",
                      "description": "http proxy endpoint",
                      "examples": [
                        "http://<host>:<port>"
                      ]
                    },
                    "httpsProxy": {
                      "$id": "#/properties/fsm/properties/fluentBit/properties/httpsProxy",
                      "type": "string",
                      "title": "The httpsProxy schema",
                      "description": "https proxy endpoint",
                      "examples": [
                        "http://<host>:<port>"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "meshName": {
                    "$id": "#/properties/fsm/properties/meshName",
                    "type": "string",
                    "title": "The meshName schema",
                    "description": "The name associated with the control plane being installed.",
                    "examples": [
                        "fsm"
                    ]
                },
                "maxDataPlaneConnections": {
                    "$id": "#/properties/fsm/properties/maxDataPlaneConnections",
                    "type": "integer",
                    "title": "The maxDataPlaneConnections schema",
                    "description": "Sets the Max Data Plane Connections",
                    "examples": [
                        "1000"
                    ]
                },
                "configResyncInterval": {
                    "$id": "#/properties/fsm/properties/configResyncInterval",
                    "type": "string",
                    "title": "The configResyncInterval schema",
                    "description": "Sets the resync interval for regular proxy broadcast updates",
                    "examples": [
                        "30s"
                    ]
                },
                "localProxyMode": {
                    "$id": "#/properties/fsm/properties/localProxyMode",
                    "type": "string",
                    "title": "The localProxyMode schema",
                    "description": "Proxy mode for the Sidecar proxy sidecar. Acceptable values are ['Localhost', 'PodIP'].",
                    "enum": [
                        "Localhost",
                        "PodIP"
                    ],
                    "examples": [
                        "Localhost"
                    ]
                },
                "localDNSProxy": {
                  "$id": "#/properties/fsm/properties/localDNSProxy",
                  "type": "object",
                  "title": "The local DNS Proxy schema",
                  "description": "Local DNS Proxy improves the performance of your computer by caching the responses coming from your DNS servers.",
                  "required": [
                    "enable",
                    "searchesWithNamespace",
                    "searchesWithTrustDomain",
                    "wildcard"
                  ],
                  "properties": {
                    "enable": {
                      "$id": "#/properties/fsm/properties/localDNSProxy/properties/enable",
                      "type": "boolean",
                      "title": "The enable schema for local DNS Proxy",
                      "description": "Indicates whether local DNS Proxy is enabled or not",
                      "examples": [
                        true
                      ]
                    },
                    "searchesWithNamespace": {
                      "$id": "#/properties/fsm/properties/localDNSProxy/properties/searchesWithNamespace",
                      "type": "boolean",
                      "title": "The enable schema for searches with Namespace",
                      "description": "Indicates whether dns searches contains namespace or not",
                      "examples": [
                        true
                      ]
                    },
                    "searchesWithTrustDomain": {
                      "$id": "#/properties/fsm/properties/localDNSProxy/properties/searchesWithTrustDomain",
                      "type": "boolean",
                      "title": "The enable schema for searches with trust domain",
                      "description": "Indicates whether dns searches contains trust domain or not",
                      "examples": [
                        true
                      ]
                    },
                    "primaryUpstreamDNSServerIPAddr": {
                      "$id": "#/properties/fsm/properties/localDNSProxy/properties/primaryUpstreamDNSServerIPAddr",
                      "type": "string",
                      "title": "Primary upstream DNS server for local DNS Proxy",
                      "description": "Primary upstream DNS server for local DNS Proxy"
                    },
                    "secondaryUpstreamDNSServerIPAddr": {
                      "$id": "#/properties/fsm/properties/localDNSProxy/properties/secondaryUpstreamDNSServerIPAddr",
                      "type": "string",
                      "title": "Secondary upstream DNS server for local DNS Proxy",
                      "description": "Secondary upstream DNS server for local DNS Proxy"
                    },
                    "wildcard": {
                      "$id": "#/properties/fsm/properties/localDNSProxy/properties/wildcard",
                      "type": "object",
                      "title": "The wildcard schema for local DNS Proxy",
                      "description": "The wildcard schema for local DNS Proxy",
                      "required": [
                        "enable",
                        "ipv4"
                      ],
                      "properties": {
                        "enable": {
                          "$id": "#/properties/fsm/properties/localDNSProxy/properties/wildcard/properties/enable",
                          "type": "boolean",
                          "title": "The enable schema for wildcard",
                          "description": "Indicates whether wildcard is enabled or not"
                        },
                        "ipv4": {
                          "$id": "#/properties/fsm/properties/localDNSProxy/properties/wildcard/properties/ipv4",
                          "type": "array",
                          "title": "The ipv4 schema for wildcard",
                          "pattern": "((?:\\d{1,3}\\.){3}\\d{1,3})$",
                          "items": {
                            "type": "string",
                            "pattern": "((?:\\d{1,3}\\.){3}\\d{1,3})$"
                          }
                        }
                      }
                    },
                    "db": {
                      "$id": "#/properties/fsm/properties/localDNSProxy/properties/db",
                      "type": "array",
                      "title": "The resolve db schema for local DNS Proxy",
                      "description": "The resolve db schema for local DNS Proxy",
                      "items": {
                        "type": "object",
                        "required": [
                          "dn",
                          "ipv4"
                        ],
                        "properties": {
                          "dn": {
                            "$id": "#/properties/fsm/properties/localDNSProxy/properties/wildcard/properties/db/properties/dn",
                            "type": "string",
                            "title": "The dn schema for wildcard",
                            "description": "FQDN"
                          },
                          "ipv4": {
                            "$id": "#/properties/fsm/properties/localDNSProxy/properties/wildcard/properties/db/properties/ipv4",
                            "type": "array",
                            "title": "ipv4",
                            "items": {
                              "type": "string",
                              "pattern": "((?:\\d{1,3}\\.){3}\\d{1,3})$"
                            }
                          }
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "controllerLogLevel": {
                    "$id": "#/properties/fsm/properties/controllerLogLevel",
                    "type": "string",
                    "title": "The controllerLogLevel schema",
                    "description": "FSM Controller log level.",
                    "pattern": "^(debug|info|warn|error|fatal|panic|disabled|trace)$",
                    "examples": [
                        "error"
                    ]
                },
                "enforceSingleMesh": {
                    "$id": "#/properties/fsm/properties/enforceSingleMesh",
                    "type": "boolean",
                    "title": "The enforceSingleMesh schema",
                    "description": "Enforce only running a single control plane within a cluster.",
                    "examples": [
                        false
                    ]
                },
                "deployJaeger": {
                    "$id": "#/properties/fsm/properties/deployJaeger",
                    "type": "boolean",
                    "title": "The deployJaeger schema",
                    "description": "Indicates whether Jaeger should be installed and configured as part of the control plane.",
                    "examples": [
                        true
                    ]
                },
                "tracing": {
                  "$id": "#/properties/fsm/properties/tracing",
                  "type": "object",
                  "title": "The tracing schema",
                  "description": "An explanation about the purpose of this instance.",
                  "examples": [
                    {
                      "enable": true
                    }
                  ],
                  "required": [
                    "enable",
                    "address",
                    "port",
                    "endpoint",
                    "image"
                  ],
                  "properties": {
                    "enable": {
                      "$id": "#/properties/fsm/properties/tracing/properties/enable",
                      "type": "boolean",
                      "title": "The enable schema for tracing",
                      "description": "Indicates whether tracing is enabled or not",
                      "examples": [
                        true
                      ]
                    },
                    "address": {
                      "$id": "#/properties/fsm/properties/tracing/properties/address",
                      "type": "string",
                      "title": "The address schema for tracing",
                      "description": "Address of the tracing collector",
                      "examples": [
                        "jaeger.<fsm-namespace>"
                      ]
                    },
                    "port": {
                      "$id": "#/properties/fsm/properties/tracing/properties/port",
                      "type": "integer",
                      "title": "The port schema for tracing",
                      "description": "Port of the tracing collector",
                      "minimum": 1,
                      "maximum": 65535,
                      "examples": [
                        9411
                      ]
                    },
                    "endpoint": {
                      "$id": "#/properties/fsm/properties/tracing/properties/endpoint",
                      "type": "string",
                      "title": "The endpoint schema for tracing",
                      "description": "API path of the collector",
                      "examples": [
                        "/api/v2/spans"
                      ]
                    },
                    "sampledFraction": {
                      "$id": "#/properties/fsm/properties/tracing/properties/sampledFraction",
                      "type": "string",
                      "title": "Sampled Fraction",
                      "description": "Sampled Fraction",
                      "examples": [
                        "0.2"
                      ]
                    },
                    "image": {
                      "$id": "#/properties/fsm/properties/tracing/properties/image",
                      "type": "object",
                      "title": "Tracing's image schema",
                      "description": "Image used for Tracing",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/tracing/properties/image/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/tracing/properties/image/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/tracing/properties/image/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    },
                    "affinity": {
                      "type": "object"
                    },
                    "nodeSelector": {
                      "type": "object"
                    },
                    "tolerations": {
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "remoteLogging": {
                    "$id": "#/properties/fsm/properties/remoteLogging",
                    "type": "object",
                    "title": "The remote logging schema",
                    "description": "An explanation about the purpose of this instance.",
                    "examples": [
                        {
                            "enable": true
                        }
                    ],
                    "required": [
                        "enable",
                        "level",
                        "address",
                        "port",
                        "endpoint",
                        "secretName"
                    ],
                    "properties": {
                        "enable": {
                            "$id": "#/properties/fsm/properties/remoteLogging/properties/enable",
                            "type": "boolean",
                            "title": "The enable schema for tracing",
                            "description": "Indicates whether remote logging is enabled or not",
                            "examples": [
                                true
                            ]
                        },
                        "level": {
                          "$id": "#/properties/fsm/properties/remoteLogging/properties/level",
                          "type": "integer",
                          "title": "The level schema for remote logging service",
                          "description": "Level of the remote logging service",
                          "minimum": 0,
                          "maximum": 2,
                          "examples": [
                            2
                          ]
                        },
                        "address": {
                            "$id": "#/properties/fsm/properties/remoteLogging/properties/address",
                            "type": "string",
                            "title": "The address schema for remote logging service",
                            "description": "Address of the remote logging service",
                            "examples": [
                                "remote-logging-service.<fsm-namespace>"
                            ]
                        },
                        "port": {
                            "$id": "#/properties/fsm/properties/remoteLogging/properties/port",
                            "type": "integer",
                            "title": "The port schema for remote logging service",
                            "description": "Port of the remote logging service",
                            "minimum": 1,
                            "maximum": 65535,
                            "examples": [
                                30514
                            ]
                        },
                        "endpoint": {
                            "$id": "#/properties/fsm/properties/remoteLogging/properties/endpoint",
                            "type": "string",
                            "title": "The endpoint schema for remote logging service",
                            "description": "API path of the collector",
                            "examples": [
                                "/api/v2/spans"
                            ]
                        },
                        "authorization": {
                            "$id": "#/properties/fsm/properties/remoteLogging/properties/authorization",
                            "type": "string",
                            "title": "The authorization for remote logging service",
                            "description": "Authorization for remote logging service",
                            "examples": [
                                "Basic XXX"
                            ]
                        },
                        "sampledFraction": {
                            "$id": "#/properties/fsm/properties/remoteLogging/properties/sampledFraction",
                            "type": "string",
                            "title": "Sampled Fraction",
                            "description": "Sampled Fraction",
                            "examples": [
                                "0.2"
                            ]
                        },
                        "secretName": {
                          "$id": "#/properties/fsm/properties/remoteLogging/properties/secretName",
                          "type": "string",
                          "title": "The secret name for remote logging service",
                          "description": "The secret name for remote logging service",
                          "default": "fsm-remote-logging-secret",
                          "examples": [
                            "fsm-remote-logging-secret"
                          ]
                        }
                    },
                    "additionalProperties": false
                },
                "webhookConfigNamePrefix": {
                    "$id": "#/properties/fsm/properties/webhookConfigNamePrefix",
                    "type": "string",
                    "title": "Webhook Config Name Prefix",
                    "description": "Prefix for the webhook name, which uses the format <webhook-prefix>-<mesh-name>",
                    "examples": [
                        ""
                    ]
                },
                "fsmNamespace": {
                    "$id": "#/properties/fsm/properties/fsmNamespace",
                    "type": "string",
                    "title": "The namespace of the FSM control plane components",
                    "description": "Indicates the namespace in which the FSM control plane components will be installed",
                    "examples": [
                        "fsm-system"
                    ]
                },
                "enablePrivilegedInitContainer": {
                    "$id": "#/properties/fsm/properties/enablePrivilegedInitContainer",
                    "type": "boolean",
                    "title": "The enablePrivilegedInitContainer schema",
                    "description": "Indicates whether the init container for pods in the mesh should be privileged",
                    "examples": [
                        false
                    ]
                },
                "injector": {
                    "$id": "#/properties/fsm/properties/injector",
                    "type": "object",
                    "title": "The sidecar injector schema",
                    "description": "Sidecar injector configurations",
                    "required": [
                        "replicaCount",
                        "resource",
                        "initResources"
                    ],
                    "properties": {
                        "replicaCount": {
                            "$id": "#/properties/fsm/properties/injector/properties/replicaCount",
                            "type": "integer",
                            "title": "The replicaCount schema",
                            "description": "The number of replicas of the fsm-injector pod.",
                            "examples": [
                                1
                            ]
                        },
                        "resource": {
                            "$ref": "#/definitions/containerResources"
                        },
                        "initResources": {
                          "$ref": "#/definitions/containerResources"
                        },
                        "podLabels": {
                            "$id": "#/properties/fsm/properties/injector/properties/podLabels",
                            "type": "object",
                            "title": "The podLabels schema",
                            "description": "Labels for the fsm-injector pod.",
                            "default": {}
                        },
                        "enablePodDisruptionBudget": {
                            "$id": "#/properties/fsm/properties/injector/properties/enablePodDisruptionBudget",
                            "type": "boolean",
                            "title": "The enablePodDisruptionBudget schema",
                            "description": "Indicates whether Pod Disruption Budget should be enabled or not.",
                            "examples": [
                                false
                            ]
                        },
                        "autoScale": {
                            "$ref": "#/definitions/autoScale"
                        },
                        "webhookTimeoutSeconds": {
                            "$id": "#/properties/fsm/properties/webhookTimeout",
                            "type": "integer",
                            "title": "Webhook Timeout Seconds",
                            "description": "Timeout for the mutating webhook in seconds",
                            "examples": [
                                20
                            ]
                        },
                        "affinity": {
                            "type": "object"
                        },
                        "nodeSelector": {
                            "type": "object"
                        },
                        "tolerations": {
                            "type": "array"
                        }
                    },
                    "additionalProperties": false
                },
                "fsmBootstrap": {
                    "$id": "#/properties/fsm/properties/fsmBootstrap",
                    "type": "object",
                    "title": "The FSM bootstrap schema",
                    "description": "FSM bootstrap's configurations",
                    "required": [
                        "replicaCount",
                        "resource"
                    ],
                    "properties": {
                        "replicaCount": {
                            "$id": "#/properties/fsm/properties/fsmBootstrap/properties/replicaCount",
                            "type": "integer",
                            "title": "The replicaCount schema",
                            "description": "The number of replicas of the FSM bootstrap pod.",
                            "examples": [
                                1
                            ]
                        },
                        "resource": {
                            "$ref": "#/definitions/containerResources"
                        },
                        "podLabels": {
                            "$id": "#/properties/fsm/properties/fsmBootstrap/properties/podLabels",
                            "type": "object",
                            "title": "The podLabels schema",
                            "description": "Labels for the FSM bootstrap pod.",
                            "default": {}
                        },
                        "affinity": {
                            "type": "object"
                        },
                        "nodeSelector": {
                            "type": "object"
                        },
                        "tolerations": {
                            "type": "array"
                        }
                    },
                    "additionalProperties": false
                },
                "fsmIngress": {
                    "type": "object",
                    "default": {},
                    "title": "The ingress Schema",
                    "required": [
                        "enabled",
                        "namespaced",
                        "http",
                        "tls",
                        "className",
                        "replicaCount",
                        "service",
                        "resources",
                        "initResources",
                        "podLabels",
                        "podAnnotations",
                        "podSecurityContext",
                        "securityContext",
                        "logLevel"
                    ],
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "title": "The enabled Schema"
                        },
                        "namespaced": {
                            "type": "boolean",
                            "default": false,
                            "title": "Enabled namespaced Ingress Controller or not"
                        },
                        "logLevel": {
                            "type": "string",
                            "default": "info",
                            "title": "logLevel schema"
                        },
                        "http": {
                            "type": "object",
                            "default": {},
                            "title": "Enable HTTP port for Ingress",
                            "required": [
                                "enabled",
                                "port",
                                "containerPort",
                                "nodePort"
                            ],
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true,
                                    "title": "Enable HTTP port for Ingress"
                                },
                                "port": {
                                    "type": "integer",
                                    "default": 80,
                                    "title": "The port Schema"
                                },
                                "containerPort": {
                                    "type": "integer",
                                    "default": 8000,
                                    "title": "The containerPort Schema"
                                },
                                "nodePort": {
                                    "type": "integer",
                                    "default": 30508,
                                    "title": "The nodePort Schema"
                                }
                            }
                        },
                        "tls": {
                            "type": "object",
                            "default": {},
                            "title": "TLS settings for Ingress",
                            "required": [
                                "enabled",
                                "port",
                                "containerPort",
                                "nodePort",
                                "sslPassthrough"
                            ],
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": false,
                                    "title": "Enable TLS/HTTPs port for Ingress"
                                },
                                "port": {
                                    "type": "integer",
                                    "default": 443,
                                    "title": "The port Schema"
                                },
                                "containerPort": {
                                    "type": "integer",
                                    "default": 8443,
                                    "title": "The containerPort Schema"
                                },
                                "nodePort": {
                                    "type": "integer",
                                    "default": 30607,
                                    "title": "The nodePort Schema"
                                },
                                "sslPassthrough": {
                                    "type": "object",
                                    "default": {},
                                    "title": "SSL Passthrough settings for Ingress",
                                    "required": [
                                        "enabled",
                                        "upstreamPort"
                                    ],
                                    "properties": {
                                        "enabled": {
                                            "type": "boolean",
                                            "default": false,
                                            "title": "Enable SSL Passthrough for Ingress"
                                        },
                                        "upstreamPort": {
                                            "type": "integer",
                                            "default": 443,
                                            "title": "Upstream port of SSL Passthrough"
                                        }
                                    }
                                }
                            }
                        },
                        "className": {
                            "type": "string",
                            "default": "pipy",
                            "title": "The className Schema"
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "The replicaCount Schema"
                        },
                        "service": {
                            "type": "object",
                            "default": {},
                            "title": "The service Schema",
                            "required": [
                                "name",
                                "type"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "default": "fsm-ingress-pipy-controller",
                                    "title": "The name Schema"
                                },
                                "type": {
                                    "type": "string",
                                    "default": "LoadBalancer",
                                    "title": "The type Schema"
                                }
                            }
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "The resources Schema"
                        },
                        "initResources": {
                          "type": "object",
                          "default": {},
                          "title": "The resources Schema"
                        },
                        "podLabels": {
                            "type": "object",
                            "default": {},
                            "title": "The podLabels Schema"
                        },
                        "podAnnotations": {
                            "type": "object",
                            "default": {},
                            "title": "The podAnnotations Schema"
                        },
                        "podSecurityContext": {
                            "type": "object",
                            "default": {},
                            "title": "The podSecurityContext Schema"
                        },
                        "securityContext": {
                            "type": "object",
                            "default": {},
                            "title": "The securityContext Schema"
                        },
                        "affinity": {
                            "type": "object"
                        },
                        "nodeSelector": {
                            "type": "object"
                        },
                        "tolerations": {
                            "type": "array"
                        }
                    }
                },
                "fsmGateway": {
                    "type": "object",
                    "default": {},
                    "title": "The gatewayApi Schema",
                    "required": [
                        "enabled",
                        "logLevel",
                        "fgwLogLevel",
                        "stripAnyHostPort",
                        "proxyPreserveHost",
                        "sslPassthroughUpstreamPort",
                        "http1PerRequestLoadBalancing",
                        "http2PerRequestLoadBalancing",
                        "proxyTag"
                    ],
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "The enabled Schema"
                        },
                        "logLevel": {
                            "type": "string",
                            "default": "info",
                            "title": "The logLevel Schema"
                        },
                        "fgwLogLevel": {
                          "type": "string",
                          "default": "info",
                          "title": "The FGW logLevel Schema"
                        },
                        "stripAnyHostPort": {
                          "type": "boolean",
                          "default": true,
                          "title": "The stripAnyHostPort Schema"
                        },
                        "proxyPreserveHost": {
                          "type": "boolean",
                          "default": true,
                          "title": "The proxyPreserveHost Schema"
                        },
                        "sslPassthroughUpstreamPort": {
                          "type": "integer",
                          "default": 443,
                          "title": "The sslPassthroughUpstreamPort Schema"
                        },
                        "http1PerRequestLoadBalancing": {
                          "type": "boolean",
                          "default": false,
                          "title": "The http1PerRequestLoadBalancing Schema"
                        },
                        "http2PerRequestLoadBalancing": {
                          "type": "boolean",
                          "default": true,
                          "title": "The http2PerRequestLoadBalancing Schema"
                        },
                        "proxyTag": {
                          "type": "object",
                          "title": "Proxy Tag",
                          "description": "Proxy Tag",
                          "required": [
                            "srcHostHeader",
                            "dstHostHeader"
                          ],
                          "properties": {
                            "srcHostHeader": {
                              "type": "string",
                              "title": "Source Host Header",
                              "description": "The source host header to be used for storing the original host of the request",
                              "examples": [
                                "orig-host"
                              ]
                            },
                            "dstHostHeader": {
                              "type": "string",
                              "title": "Destination Host Header",
                              "description": "The destination host header to be used for storing the user defined host of the request",
                              "examples": [
                                "proxy-tag"
                              ]
                            }
                          }
                        }
                    }
                },
                "serviceLB": {
                  "type": "object",
                  "default": {},
                  "title": "The serviceLB Schema",
                  "required": [
                    "enabled",
                    "image"
                  ],
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "default": false,
                      "title": "The enabled Schema"
                    },
                    "image": {
                      "$id": "#/properties/fsm/properties/serviceLB/properties/image",
                      "type": "object",
                      "title": "Pipy sidecar's image schema",
                      "description": "Image used for pipy sidecar",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/serviceLB/properties/image/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/serviceLB/properties/image/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/serviceLB/properties/image/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "egressGateway": {
                    "type": "object",
                    "default": {},
                    "title": "The manager Schema",
                    "required": [
                        "enabled",
                        "name",
                        "replicaCount",
                        "resources",
                        "podLabels",
                        "podAnnotations",
                        "port",
                        "adminPort",
                        "mode",
                        "logLevel"
                    ],
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "The enabled Schema"
                        },
                        "name": {
                            "type": "string",
                            "default": "fsm-manager",
                            "title": "The name Schema"
                        },
                        "replicaCount": {
                            "type": "integer",
                            "default": 1,
                            "title": "The replicaCount Schema"
                        },
                        "resources": {
                            "type": "object",
                            "default": {},
                            "title": "The resources Schema"
                        },
                        "podLabels": {
                            "type": "object",
                            "default": {},
                            "title": "The podLabels Schema"
                        },
                        "podAnnotations": {
                            "type": "object",
                            "default": {},
                            "title": "The podAnnotations Schema"
                        },
                        "port": {
                            "type": "integer",
                            "default": 1080,
                            "title": "The port Schema"
                        },
                        "adminPort": {
                            "type": "integer",
                            "default": 6060,
                            "title": "The admin port Schema"
                        },
                        "mode": {
                            "type": "string",
                            "default": "http2tunnel",
                            "title": "The forward mode"
                        },
                        "logLevel": {
                            "type": "string",
                            "default": "error",
                            "title": "The logLevel Schema"
                        }
                    }
                },
                "flb": {
                    "type": "object",
                    "default": {},
                    "title": "The FLB Schema",
                    "required": [
                        "enabled",
                        "strictMode",
                        "secretName",
                        "baseUrl",
                        "username",
                        "password",
                        "k8sCluster",
                        "defaultAddressPool",
                        "defaultAlgo"
                    ],
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": false,
                            "title": "The enabled Schema"
                        },
                        "strictMode": {
                            "type": "boolean",
                            "default": false,
                            "title": "The strictMode Schema"
                        },
                        "secretName": {
                            "type": "string",
                            "default": "fsm-flb-secret",
                            "title": "The secretName Schema"
                        },
                        "baseUrl": {
                            "type": "string",
                            "default": "http://localhost:1337",
                            "title": "The baseUrl Schema"
                        },
                        "username": {
                            "type": "string",
                            "default": "admin",
                            "title": "The username Schema"
                        },
                        "password": {
                            "type": "string",
                            "default": "admin",
                            "title": "The password Schema"
                        },
                        "k8sCluster": {
                          "type": "string",
                          "default": "UNKNOWN",
                          "title": "The k8sCluster Schema"
                        },
                        "defaultAddressPool": {
                            "type": "string",
                            "default": "default",
                            "title": "The defaultAddressPool Schema"
                        },
                        "defaultAlgo": {
                            "type": "string",
                            "default": "rr",
                            "title": "The defaultAlgo Schema"
                        }
                    }
                },
                "featureFlags": {
                    "$id": "#/properties/fsm/properties/featureFlags",
                    "type": "object",
                    "title": "Feature flags",
                    "description": "Feature flags",
                    "examples": [
                        {
                            "enableEgressPolicy": true
                        }
                    ],
                    "required": [
                        "enableEgressPolicy",
                        "enableAsyncProxyServiceMapping",
                        "enableIngressBackendPolicy",
                        "enableAccessControlPolicy",
                        "enableAccessCertPolicy",
                        "enableSidecarPrettyConfig",
                        "enableSidecarActiveHealthChecks",
                        "enableSnapshotCacheMode",
                        "enableRetryPolicy",
                        "enablePluginPolicy",
                        "enableMeshRootCertificate",
                        "enableAutoDefaultRoute",
                        "enableValidateGatewayListenerHostname",
                        "enableValidateHTTPRouteHostnames",
                        "enableValidateGRPCRouteHostnames",
                        "enableValidateTLSRouteHostnames",
                        "enableGatewayAgentService",
                        "enableGatewayProxyTag",
                        "useEndpointSlicesForGateway"
                    ],
                    "properties": {
                        "enableEgressPolicy": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableEgressPolicy",
                            "type": "boolean",
                            "title": "Enable FSM's Egress policy",
                            "description": "Enable FSM's Egress policy for fine grained control over egress (external) traffic",
                            "examples": [
                                true
                            ]
                        },
                        "enableAsyncProxyServiceMapping": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableAsyncProxyServiceMapping",
                            "type": "boolean",
                            "title": "Enable async proxy-service mapping",
                            "description": "Enable async proxy-service mapping",
                            "examples": [
                                true
                            ]
                        },
                        "enableIngressBackendPolicy": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableIngressBackendPolicy",
                            "type": "boolean",
                            "title": "Enable FSM to use the IngressBackend API",
                            "description": "Enable FSM to use the IngressBackend API for allowing ingress to mesh backends",
                            "examples": [
                                true
                            ]
                        },
                        "enableAccessControlPolicy": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableAccessControlPolicy",
                            "type": "boolean",
                            "title": "Enable FSM to use the AccessControl API",
                            "description": "Enable FSM to use the AccessControl API for allowing access control traffic to mesh backends",
                            "examples": [
                                true
                            ]
                        },
                        "enableAccessCertPolicy": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableAccessCertPolicy",
                            "type": "boolean",
                            "title": "Enable FSM to issue certificates for external services",
                            "description": "Enable FSM to issue certificates for external services",
                            "examples": [
                                true
                            ]
                        },
                        "enableSidecarPrettyConfig": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/enableSidecarPrettyConfig",
                          "type": "boolean",
                          "title": "Enable Pretty Sidecar Config",
                          "description": "EnableSidecarPrettyConfig defines if pretty sidecar's config is enable",
                          "examples": [
                            true
                          ]
                        },
                        "enableSidecarActiveHealthChecks": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableSidecarActiveHealthChecks",
                            "type": "boolean",
                            "title": "Enable Sidecar active health checks",
                            "description": "EnableSidecarActiveHealthChecks defines if FSM will Sidecar active health checks between services allowed to communicate",
                            "examples": [
                                true
                            ]
                        },
                        "enableSnapshotCacheMode": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableSnapshotCacheMode",
                            "type": "boolean",
                            "title": "Enable SnapshotCache feature for Sidecar xDS server",
                            "description": "Enable SnapshotCache feature in FSM controller to cache snapshots for Sidecar xDS configurations.",
                            "examples": [
                                true
                            ]
                        },
                        "enableRetryPolicy": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableRetryPolicy",
                            "type": "boolean",
                            "title": "Enable Retry Policy",
                            "description": "Enable automatic request retries.",
                            "examples": [
                                true
                            ]
                        },
                        "enablePluginPolicy": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enablePluginPolicy",
                            "type": "boolean",
                            "title": "Enable Plugin Policy",
                            "description": "Enable extend by plugin.",
                            "examples": [
                                false
                            ]
                        },
                        "enableMeshRootCertificate": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableMeshRootCertificate",
                            "type": "boolean",
                            "title": "Enable the MeshRootCertificate",
                            "description": "Enable the MeshRootCertificate to configure the FSM certificate provider.",
                            "examples": [
                                false
                            ]
                        },
                        "enableAutoDefaultRoute": {
                            "$id": "#/properties/fsm/properties/featureFlags/properties/enableAutoDefaultRoute",
                            "type": "boolean",
                            "title": "Enable the AutoDefaultRoute",
                            "description": "Enable the AutoDefaultRoute.",
                            "examples": [
                                false
                            ]
                        },
                        "enableValidateGatewayListenerHostname": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/enableValidateGatewayListenerHostname",
                          "type": "boolean",
                          "title": "Enable validate Gateway listener hostname",
                          "description": "Enable validate Gateway listener hostname",
                          "examples": [
                            true
                          ]
                        },
                        "enableValidateHTTPRouteHostnames": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/enableValidateHTTPRouteHostnames",
                          "type": "boolean",
                          "title": "Enable validate HTTP route hostnames",
                          "description": "Enable validate HTTP route hostnames",
                          "examples": [
                            true
                          ]
                        },
                        "enableValidateGRPCRouteHostnames": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/enableValidateGRPCRouteHostnames",
                          "type": "boolean",
                          "title": "Enable validate GRPC route hostnames",
                          "description": "Enable validate GRPC route hostnames",
                          "examples": [
                            true
                          ]
                        },
                        "enableValidateTLSRouteHostnames": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/enableValidateGRPCRouteHostnames",
                          "type": "boolean",
                          "title": "Enable validate TLS route hostnames",
                          "description": "Enable validate TLS route hostnames",
                          "examples": [
                            true
                          ]
                        },
                        "enableGatewayAgentService": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/enableGatewayAgentService",
                          "type": "boolean",
                          "title": "Enable Agent Service",
                          "description": "Enable Agent Service",
                          "examples": [
                            false
                          ]
                        },
                        "enableGatewayProxyTag": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/enableGatewayProxyTag",
                          "type": "boolean",
                          "title": "Enable Proxy Tag",
                          "description": "Enable proxy-tag header for gateway",
                          "examples": [
                            false
                          ]
                        },
                        "useEndpointSlicesForGateway": {
                          "$id": "#/properties/fsm/properties/featureFlags/properties/useEndpointSlicesForGateway",
                          "type": "boolean",
                          "title": "UseEndpointSlicesForGateway",
                          "description": "Use EndpointSlices for calculating Gateway routes",
                          "examples": [
                            true
                          ]
                        }
                    },
                    "additionalProperties": false
                },
                "pspEnabled": {
                    "$id": "#/properties/fsm/properties/pspEnabled",
                    "type": "boolean",
                    "title": "The pspEnabled schema",
                    "description": "Indicates whether FSM should run with PodSecurityPolicies",
                    "examples": [
                        false
                    ]
                },
                "controlPlaneTolerations": {
                    "$id": "#/properties/fsm/properties/controlPlaneTolerations",
                    "type": "array",
                    "title": "The controlPlaneTolerations schema",
                    "description": "Node tolerations applied to control plane pods to schedule onto nodes with matching taints",
                    "items": {
                        "type": "object"
                    },
                    "examples": [
                        [
                            {
                                "key": "key1",
                                "operator": "Equal",
                                "value": "value1",
                                "effect": "NoSchedule"
                            }
                        ]
                    ]
                },
                "outboundIPRangeExclusionList": {
                    "$id": "#/properties/fsm/properties/outboundIPRangeExclusionList",
                    "type": "array",
                    "title": "The outboundIPRangeExclusionList schema",
                    "description": "Outbound IP range exluclusion list for sidecar traffic interception",
                    "items": {
                        "type": "string",
                        "pattern": "((?:\\d{1,3}\\.){3}\\d{1,3})\\/(\\d{1,2})$"
                    },
                    "examples": [
                        [
                            "8.8.8.8/32",
                            "10.0.0.0/24"
                        ]
                    ]
                },
                "outboundIPRangeInclusionList": {
                    "$id": "#/properties/fsm/properties/outboundIPRangeInclusionList",
                    "type": "array",
                    "title": "The outboundIPRangeInclusionList schema",
                    "description": "Outbound IP range inclusion list for sidecar traffic interception",
                    "items": {
                        "type": "string",
                        "pattern": "((?:\\d{1,3}\\.){3}\\d{1,3})\\/(\\d{1,2})$"
                    },
                    "examples": [
                        [
                            "8.8.8.8/32",
                            "10.0.0.0/24"
                        ]
                    ]
                },
                "outboundPortExclusionList": {
                    "$id": "#/properties/fsm/properties/outboundPortExclusionList",
                    "type": "array",
                    "title": "The outboundPortExclusionList schema",
                    "description": "Outbound port exluclusion list for sidecar traffic interception",
                    "items": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "examples": [
                        [
                            6379,
                            3315
                        ]
                    ]
                },
                "inboundPortExclusionList": {
                    "$id": "#/properties/fsm/properties/inboundPortExclusionList",
                    "type": "array",
                    "title": "The inboundPortExclusionList schema",
                    "description": "Inbound port exluclusion list for sidecar traffic interception",
                    "items": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    },
                    "examples": [
                        [
                            6379,
                            3315
                        ]
                    ]
                },
                "networkInterfaceExclusionList": {
                    "$id": "#/properties/fsm/properties/networkInterfaceExclusionList",
                    "type": "array",
                    "title": "The networkInterfaceExclusionList schema",
                    "description": "Network interface exluclusion list for sidecar traffic interception",
                    "items": {
                        "type": "string"
                    },
                    "examples": [
                        [
                            "eth0",
                            "net1"
                        ]
                    ]
                },
                "grafana": {
                  "$id": "#/properties/fsm/properties/grafana",
                  "type": "object",
                  "title": "The grafana schema",
                  "description": "Grafana configuration parameters",
                  "required": [
                    "port",
                    "enableRemoteRendering",
                    "image",
                    "rendererImage"
                  ],
                  "properties": {
                    "port": {
                      "$id": "#/properties/fsm/properties/grafana/properties/port",
                      "title": "Grafana's port schema",
                      "description": "Grafana's port number",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 65535,
                      "examples": [
                        3000
                      ]
                    },
                    "enableRemoteRendering": {
                      "$id": "#/properties/fsm/properties/grafana/properties/enableRemoteRendering",
                      "type": "boolean",
                      "title": "Grafana's enableRemoteRendering schema",
                      "description": "Enable remote rendering of Grafana's dashboards",
                      "examples": [
                        true
                      ]
                    },
                    "image": {
                      "$id": "#/properties/fsm/properties/grafana/properties/image",
                      "type": "object",
                      "title": "Grafana's image schema",
                      "description": "Image used for Grafana",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/grafana/properties/image/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/grafana/properties/image/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/grafana/properties/image/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    },
                    "rendererImage": {
                      "$id": "#/properties/fsm/properties/grafana/properties/rendererImage",
                      "type": "object",
                      "title": "Grafana Renderer's image schema",
                      "description": "Image used for Grafana Renderer",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/grafana/properties/rendererImage/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/grafana/properties/rendererImage/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/grafana/properties/rendererImage/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    },
                    "affinity": {
                      "type": "object"
                    },
                    "nodeSelector": {
                      "type": "object"
                    },
                    "tolerations": {
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "certmanager": {
                    "$id": "#/properties/fsm/properties/certmanager",
                    "type": "object",
                    "title": "The certmanager schema",
                    "description": "cert-manager.io configuration parameters",
                    "required": [
                        "issuerName",
                        "issuerKind",
                        "issuerGroup"
                    ],
                    "properties": {
                        "issuerName": {
                            "$id": "#/properties/fsm/properties/certmanager/properties/issuerName",
                            "title": "Cert-manager's issuerName schema",
                            "description": "Cert-manager's certificate issuer name",
                            "type": "string",
                            "examples": [
                                "fsm-ca"
                            ]
                        },
                        "issuerKind": {
                            "$id": "#/properties/fsm/properties/certmanager/properties/issuerKind",
                            "title": "Cert-manager's issuerKind schema",
                            "description": "Cert-manager's certificate issuer kind",
                            "type": "string",
                            "examples": [
                                "Issuer"
                            ]
                        },
                        "issuerGroup": {
                            "$id": "#/properties/fsm/properties/certmanager/properties/issuerGroup",
                            "title": "Cert-manager's issuerGroup schema",
                            "description": "Cert-manager's certificate issuer group",
                            "type": "string",
                            "examples": [
                                "cert-manager"
                            ]
                        }
                    },
                    "examples": [
                        {
                            "issuerName": "fsm-ca",
                            "issuerKind": "Issuer",
                            "issuerGroup": "cert-manager"
                        }
                    ],
                    "additionalProperties": false
                },
                "vault": {
                    "$id": "#/properties/fsm/properties/vault",
                    "type": "object",
                    "title": "The Hashicorp Vault schema",
                    "description": "Hashicorp Vault configuration parameters",
                    "properties": {
                        "host": {
                            "$id": "#/properties/fsm/properties/vault/properties/host",
                            "title": "Hashicorp Vault's host schema",
                            "description": "Hashicorp Vault host/service - where Vault is installed",
                            "type": "string"
                        },
                        "port": {
                            "$id": "#/properties/fsm/properties/vault/properties/port",
                            "title": "Hashicorp Vault's port",
                            "description": "Port to use to connect to vault",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 65535
                        },
                        "protocol": {
                            "$id": "#/properties/fsm/properties/vault/properties/protocol",
                            "title": "Hashicorp Vault's protocol schema",
                            "description": "Protocol to use to connect to Vault",
                            "type": "string"
                        },
                        "token": {
                            "$id": "#/properties/fsm/properties/vault/properties/token",
                            "title": "Hashicorp Vault's token schema",
                            "description": "Token to use to connect to Vault",
                            "type": "string"
                        },
                        "role": {
                            "$id": "#/properties/fsm/properties/vault/properties/role",
                            "title": "Hashicorp Vault's role schema",
                            "description": "Role to use with Vault",
                            "type": "string"
                        },
                        "secret": {
                            "$id": "#/properties/fsm/properties/vault/properties/secret",
                            "type": "object",
                            "title": "Vault token secret schema",
                            "description": "Vault token secret reference parameters",
                            "properties": {
                                "name": {
                                    "$id": "#/properties/fsm/properties/vault/properties/secret/properties/name",
                                    "title": "Vault token secret name schema",
                                    "description": "Name of the Kubernetes Secret to store the vault token",
                                    "type": "string"
                                },
                                "key": {
                                    "$id": "#/properties/fsm/properties/vault/properties/secret/properties/key",
                                    "title": "Vault token secret key schema",
                                    "description": "Name of the Kubernetes Secret key with the value of the vault token",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "examples": [
                        {
                            "host": "vault.default",
                            "protocol": "http",
                            "token": "some-token",
                            "role": "flomesh"
                        }
                    ],
                    "additionalProperties": false
                },
                "prometheus": {
                  "$id": "#/properties/fsm/properties/prometheus",
                  "type": "object",
                  "title": "The prometheus schema",
                  "description": "Prometheus configurations",
                  "required": [
                    "resources",
                    "port",
                    "retention",
                    "image"
                  ],
                  "properties": {
                    "resources": {
                      "$ref": "#/definitions/containerResources"
                    },
                    "port": {
                      "$id": "#/properties/fsm/properties/prometheus/properties/port",
                      "title": "Prometheus' port schema",
                      "description": "Prometheus' port number",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 65535,
                      "examples": [
                        7070
                      ]
                    },
                    "retention": {
                      "$id": "#/properties/fsm/properties/prometheus/properties/rentention",
                      "type": "object",
                      "title": "The Prometheus retention schema",
                      "description": "Prometheus data retention configurations",
                      "required": [
                        "time"
                      ],
                      "properties": {
                        "time": {
                          "$id": "#/properties/fsm/properties/prometheus/properties/retention/properties/time",
                          "title": "Prometheus' data retention time schema",
                          "description": "Prometheus' data retention time",
                          "type": "string",
                          "examples": [
                            "15d"
                          ]
                        }
                      }
                    },
                    "image": {
                      "$id": "#/properties/fsm/properties/prometheus/properties/image",
                      "type": "object",
                      "title": "Prometheus's image schema",
                      "description": "Image used for prometheus",
                      "required": [
                        "name",
                        "tag"
                      ],
                      "properties": {
                        "name": {
                          "$id": "#/properties/fsm/properties/prometheus/properties/image/properties/name",
                          "type": "string",
                          "title": "The name schema"
                        },
                        "registry": {
                          "$id": "#/properties/fsm/properties/prometheus/properties/image/properties/registry",
                          "type": "string",
                          "title": "The registry schema"
                        },
                        "tag": {
                          "$id": "#/properties/fsm/properties/prometheus/properties/image/properties/tag",
                          "type": "string",
                          "title": "The tag schema"
                        }
                      },
                      "additionalProperties": false
                    },
                    "affinity": {
                      "type": "object"
                    },
                    "nodeSelector": {
                      "type": "object"
                    },
                    "tolerations": {
                      "type": "array"
                    }
                  },
                  "additionalProperties": false
                },
                "imagePullSecrets": {
                    "$id": "#/properties/fsm/properties/imagePullSecrets",
                    "type": "array",
                    "title": "The imagePullSecrets schema",
                    "description": "ImagePullSecrets for the control plane pod",
                    "items": {
                        "type": "object"
                    },
                    "examples": [
                        [
                            {
                                "name": "secret-name"
                            }
                        ]
                    ]
                },
                "validatorWebhook": {
                    "$id": "#/properties/fsm/properties/validatorWebhook",
                    "type": "object",
                    "title": "The validatorWebhook schema",
                    "description": "Resource validator webhook configuration",
                    "properties": {
                        "webhookConfigurationName": {
                            "$id": "#/properties/fsm/properties/validatorWebhook/properties/webhookConfigurationName",
                            "title": "Validator webhook configuration schema",
                            "description": "Validator's ValidatingWebhookConfigurationName",
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "preinstall": {
                    "$id": "#/properties/fsm/properties/preinstall",
                    "type": "object",
                    "title": "The preinstall schema",
                    "description": "Preinstall configurations",
                    "required": [],
                    "properties": {
                        "affinity": {
                            "type": "object"
                        },
                        "nodeSelector": {
                            "type": "object"
                        },
                        "tolerations": {
                            "type": "array"
                        },
                        "resources": {
                          "type": "object",
                          "default": {},
                          "title": "The resources Schema"
                        }
                    },
                    "additionalProperties": false
                },
                "cleanup": {
                    "$id": "#/properties/fsm/properties/preinstall",
                    "type": "object",
                    "title": "The preinstall schema",
                    "description": "Preinstall configurations",
                    "required": [],
                    "properties": {
                        "affinity": {
                            "type": "object"
                        },
                        "nodeSelector": {
                            "type": "object"
                        },
                        "tolerations": {
                            "type": "array"
                        },
                        "resources": {
                          "type": "object",
                          "default": {},
                          "title": "The resources Schema"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "smi": {
            "$id": "#/properties/smi",
            "type": "object",
            "title": "SMI Configuration",
            "description": "SMI configuration",
            "properties": {
                "validateTrafficTarget": {
                    "$id": "#/properties/smi/validateTrafficTarget",
                    "title": "Validate Traffic Target",
                    "description": "Enables validation of SMI Traffic Target",
                    "type": "boolean"
                }
            }
        },
        "clusterSet": {
          "$id": "#/properties/clusterSet",
          "type": "object",
          "title": "ClusterSet Configuration",
          "description": "ClusterSet configuration",
          "required": [
            "isManaged"
          ],
          "properties": {
            "isManaged": {
              "$id": "#/properties/clusterSet/isManaged",
              "title": "Managed",
              "description": "Managed",
              "type": "boolean"
            },
            "region": {
              "$id": "#/properties/clusterSet/region",
              "title": "Region",
              "description": "Region",
              "type": "string"
            },
            "zone": {
              "$id": "#/properties/clusterSet/zone",
              "title": "Zone",
              "description": "Zone",
              "type": "string"
            },
            "group": {
              "$id": "#/properties/clusterSet/group",
              "title": "Group",
              "description": "Group",
              "type": "string"
            },
            "name": {
              "$id": "#/properties/clusterSet/name",
              "title": "Name",
              "description": "Name",
              "type": "string"
            },
            "controlPlaneUID": {
              "$id": "#/properties/clusterSet/controlPlaneUID",
              "title": "Control Plane UID",
              "description": "Control Plane UID",
              "type": "string"
            }
          }
        }
    }
}