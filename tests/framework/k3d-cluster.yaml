apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: fsm-e2e
servers: 1
agents: 1
kubeAPI:
  hostIP: "0.0.0.0"
  hostPort: "6443"
ports:
  - port: 80:80
    nodeFilters:
      - loadbalancer
  - port: 8090:8090
    nodeFilters:
      - loadbalancer
  - port: 9090:9090
    nodeFilters:
      - loadbalancer
  - port: 7443:7443
    nodeFilters:
      - loadbalancer
  - port: 8443:8443
    nodeFilters:
      - loadbalancer
  - port: 9443:9443
    nodeFilters:
      - loadbalancer
  - port: 3000:3000
    nodeFilters:
      - loadbalancer
  - port: 4000:4000/udp
    nodeFilters:
      - loadbalancer
  - port: 3001:3001
    nodeFilters:
      - loadbalancer
  - port: 4001:4001/udp
    nodeFilters:
      - loadbalancer
#registries:
#  use:
#    - k3d-registry:5000
#  config: |
#    mirrors:
#      "localhost:5001":
#        endpoint:
#          - http://k3d-registry:5000
options:
  k3d:
    wait: true
    timeout: "300s"
    disableLoadbalancer: false
    disableImageVolume: false
    disableRollback: false
    loadbalancer:
      configOverrides:
        - settings.workerConnections=2048
  k3s:
    extraArgs:
      - arg: --disable=traefik
        nodeFilters:
          - server:*
      - arg: --kubelet-arg=eviction-hard=imagefs.available<1%,nodefs.available<1%
        nodeFilters:
          - agent:*
      - arg: --kubelet-arg=eviction-minimum-reclaim=imagefs.available=1%,nodefs.available=1%
        nodeFilters:
          - agent:*
    nodeLabels:
      - label: ingress-ready=true # same as `--k3s-node-label 'foo=bar@agent:1'` -> this results in a Kubernetes node label
        nodeFilters:
          - agent:*
  kubeconfig:
    updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig; same as `--kubeconfig-update-default` (default: true)
    switchCurrentContext: true