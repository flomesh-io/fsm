apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  labels:
    app.kubernetes.io/name: flomesh.io
  name: globaltrafficpolicies.flomesh.io
spec:
  group: flomesh.io
  names:
    kind: GlobalTrafficPolicy
    listKind: GlobalTrafficPolicyList
    plural: globaltrafficpolicies
    shortNames:
    - gtp
    singular: globaltrafficpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.lbType
      name: LB Type
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GlobalTrafficPolicy is the Schema for the GlobalTrafficPolicys
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GlobalTrafficPolicySpec defines the desired state of GlobalTrafficPolicy
            properties:
              lbType:
                default: Locality
                description: Type of global load distribution
                enum:
                - Locality
                - ActiveActive
                - FailOver
                type: string
              targets:
                items:
                  properties:
                    clusterKey:
                      description: 'Format: [region]/[zone]/[group]/[cluster]'
                      type: string
                    weight:
                      type: integer
                  required:
                  - clusterKey
                  type: object
                type: array
            required:
            - lbType
            type: object
          status:
            description: GlobalTrafficPolicyStatus defines the observed state of GlobalTrafficPolicy
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  labels:
    app.kubernetes.io/name: flomesh.io
  name: serviceexports.flomesh.io
spec:
  group: flomesh.io
  names:
    kind: ServiceExport
    listKind: ServiceExportList
    plural: serviceexports
    shortNames:
    - sexp
    singular: serviceexport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Valid')].status
      name: Valid
      type: string
    - jsonPath: .status.conditions[?(@.type=='Conflict')].status
      name: Conflict
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceExport is the Schema for the ServiceExports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceExportSpec defines the desired state of ServiceExport
            properties:
              loadBalancer:
                default: RoundRobinLoadBalancer
                description: The LoadBalancer Type applied to the Ingress Rules those
                  created by the ServiceExport
                enum:
                - RoundRobinLoadBalancer
                - HashingLoadBalancer
                - LeastWorkLoadBalancer
                type: string
              pathRewrite:
                description: PathRewrite, it shares ONE rewrite rule for the same
                  ServiceExport
                properties:
                  from:
                    type: string
                  to:
                    type: string
                type: object
              rules:
                description: The paths for accessing the service via Ingress controller
                items:
                  properties:
                    path:
                      description: Path is matched against the path of an incoming
                        request. Currently it can contain characters disallowed from
                        the conventional "path" part of a URL as defined by RFC 3986.
                        Paths must begin with a '/' and must be present when using
                        PathType with value "Exact" or "Prefix".
                      type: string
                    pathType:
                      description: PathType represents the type of path referred to
                        by a HTTPIngressPath.
                      enum:
                      - Exact
                      - Prefix
                      type: string
                    portNumber:
                      description: The port number of service
                      format: int32
                      type: integer
                  required:
                  - pathType
                  type: object
                minItems: 1
                type: array
              serviceAccountName:
                description: The ServiceAccount associated with this service
                type: string
              sessionSticky:
                description: Indicates if session sticky is  enabled
                type: boolean
              targetClusters:
                description: If empty, service is exported to all managed clusters.
                  If not empty, service is exported to specified clusters, must be
                  in format [region]/[zone]/[group]/[cluster]
                items:
                  type: string
                type: array
            type: object
          status:
            description: ServiceExportStatus defines the observed state of ServiceExport
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  labels:
    app.kubernetes.io/name: flomesh.io
  name: serviceimports.flomesh.io
spec:
  group: flomesh.io
  names:
    kind: ServiceImport
    listKind: ServiceImportList
    plural: serviceimports
    shortNames:
    - simp
    singular: serviceimport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceImport is the Schema for the ServiceImports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceImportSpec describes an imported service and the information
              necessary to consume it.
            properties:
              ips:
                description: ip will be used as the VIP for this service when type
                  is ClusterSetIP.
                items:
                  type: string
                maxItems: 1
                type: array
              ports:
                items:
                  description: ServicePort represents the port on which the service
                    is exposed
                  properties:
                    appProtocol:
                      description: The application protocol for this port. This field
                        follows standard Kubernetes label syntax. Un-prefixed names
                        are reserved for IANA standard service names (as per RFC-6335
                        and http://www.iana.org/assignments/service-names). Non-standard
                        protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                        Field can be enabled with ServiceAppProtocol feature gate.
                      type: string
                    endpoints:
                      description: The address of accessing the service
                      items:
                        properties:
                          clusterKey:
                            type: string
                          target:
                            properties:
                              host:
                                type: string
                              ip:
                                type: string
                              path:
                                type: string
                              port:
                                format: int32
                                type: integer
                            required:
                            - host
                            - ip
                            - path
                            - port
                            type: object
                        required:
                        - clusterKey
                        - target
                        type: object
                      type: array
                    name:
                      description: The name of this port within the service. This
                        must be a DNS_LABEL. All ports within a ServiceSpec must have
                        unique names. When considering the endpoints for a Service,
                        this must match the 'name' field in the EndpointPort. Optional
                        if only one ServicePort is defined on this service.
                      type: string
                    port:
                      description: The port that will be exposed by this service.
                      format: int32
                      type: integer
                    protocol:
                      default: TCP
                      description: The IP protocol for this port. Supports "TCP",
                        "UDP", and "SCTP". Default is TCP.
                      type: string
                  required:
                  - endpoints
                  - port
                  type: object
                type: array
                x-kubernetes-list-type: atomic
              serviceAccountName:
                description: The ServiceAccount associated with this service
                type: string
              sessionAffinity:
                description: 'Supports "ClientIP" and "None". Used to maintain session
                  affinity. Enable client IP based session affinity. Must be ClientIP
                  or None. Defaults to None. Ignored when type is Headless More info:
                  https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                type: string
              sessionAffinityConfig:
                description: sessionAffinityConfig contains session affinity configuration.
                properties:
                  clientIP:
                    description: clientIP contains the configurations of Client IP
                      based session affinity.
                    properties:
                      timeoutSeconds:
                        description: timeoutSeconds specifies the seconds of ClientIP
                          type session sticky time. The value must be >0 && <=86400(for
                          1 day) if ServiceAffinity == "ClientIP". Default value is
                          10800(for 3 hours).
                        format: int32
                        type: integer
                    type: object
                type: object
              type:
                description: type defines the type of this service. Must be ClusterSetIP
                  or Headless.
                enum:
                - ClusterSetIP
                - Headless
                type: string
            required:
            - ports
            type: object
          status:
            description: ServiceImportStatus describes derived state of an imported
              service.
            properties:
              clusters:
                description: clusters is the list of exporting clusters from which
                  this service was derived.
                items:
                  description: ClusterStatus contains service configuration mapped
                    to a specific source cluster
                  properties:
                    addresses:
                      description: in-cluster service, it's the cluster IPs otherwise,
                        it's the url of accessing that service in remote cluster for
                        example, http(s)://[Ingress IP/domain name]:[port]/[path]
                      items:
                        type: string
                      type: array
                    cluster:
                      description: cluster is the name of the exporting cluster. Must
                        be a valid RFC-1123 DNS label.
                      type: string
                  required:
                  - cluster
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - cluster
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
