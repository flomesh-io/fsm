/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/flomesh-io/fsm/pkg/apis/extension/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// MetricsLister helps list Metricses.
// All objects returned here must be treated as read-only.
type MetricsLister interface {
	// List lists all Metricses in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Metrics, err error)
	// Metricses returns an object that can list and get Metricses.
	Metricses(namespace string) MetricsNamespaceLister
	MetricsListerExpansion
}

// metricsLister implements the MetricsLister interface.
type metricsLister struct {
	listers.ResourceIndexer[*v1alpha1.Metrics]
}

// NewMetricsLister returns a new MetricsLister.
func NewMetricsLister(indexer cache.Indexer) MetricsLister {
	return &metricsLister{listers.New[*v1alpha1.Metrics](indexer, v1alpha1.Resource("metrics"))}
}

// Metricses returns an object that can list and get Metricses.
func (s *metricsLister) Metricses(namespace string) MetricsNamespaceLister {
	return metricsNamespaceLister{listers.NewNamespaced[*v1alpha1.Metrics](s.ResourceIndexer, namespace)}
}

// MetricsNamespaceLister helps list and get Metricses.
// All objects returned here must be treated as read-only.
type MetricsNamespaceLister interface {
	// List lists all Metricses in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Metrics, err error)
	// Get retrieves the Metrics from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Metrics, error)
	MetricsNamespaceListerExpansion
}

// metricsNamespaceLister implements the MetricsNamespaceLister
// interface.
type metricsNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Metrics]
}
