/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/flomesh-io/fsm/pkg/apis/extension/v1alpha1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ConcurrencyLimitLister helps list ConcurrencyLimits.
// All objects returned here must be treated as read-only.
type ConcurrencyLimitLister interface {
	// List lists all ConcurrencyLimits in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ConcurrencyLimit, err error)
	// ConcurrencyLimits returns an object that can list and get ConcurrencyLimits.
	ConcurrencyLimits(namespace string) ConcurrencyLimitNamespaceLister
	ConcurrencyLimitListerExpansion
}

// concurrencyLimitLister implements the ConcurrencyLimitLister interface.
type concurrencyLimitLister struct {
	listers.ResourceIndexer[*v1alpha1.ConcurrencyLimit]
}

// NewConcurrencyLimitLister returns a new ConcurrencyLimitLister.
func NewConcurrencyLimitLister(indexer cache.Indexer) ConcurrencyLimitLister {
	return &concurrencyLimitLister{listers.New[*v1alpha1.ConcurrencyLimit](indexer, v1alpha1.Resource("concurrencylimit"))}
}

// ConcurrencyLimits returns an object that can list and get ConcurrencyLimits.
func (s *concurrencyLimitLister) ConcurrencyLimits(namespace string) ConcurrencyLimitNamespaceLister {
	return concurrencyLimitNamespaceLister{listers.NewNamespaced[*v1alpha1.ConcurrencyLimit](s.ResourceIndexer, namespace)}
}

// ConcurrencyLimitNamespaceLister helps list and get ConcurrencyLimits.
// All objects returned here must be treated as read-only.
type ConcurrencyLimitNamespaceLister interface {
	// List lists all ConcurrencyLimits in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ConcurrencyLimit, err error)
	// Get retrieves the ConcurrencyLimit from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ConcurrencyLimit, error)
	ConcurrencyLimitNamespaceListerExpansion
}

// concurrencyLimitNamespaceLister implements the ConcurrencyLimitNamespaceLister
// interface.
type concurrencyLimitNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.ConcurrencyLimit]
}
