/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
)

// EgressSourceCertSpecApplyConfiguration represents an declarative configuration of the EgressSourceCertSpec type for use
// with apply.
type EgressSourceCertSpecApplyConfiguration struct {
	SerialNumber    *int                `json:"sn,omitempty"`
	SubjectAltNames []string            `json:"subjectAltNames,omitempty"`
	Expiration      *string             `json:"expiration,omitempty"`
	Secret          *v1.SecretReference `json:"secret,omitempty"`
}

// EgressSourceCertSpecApplyConfiguration constructs an declarative configuration of the EgressSourceCertSpec type for use with
// apply.
func EgressSourceCertSpec() *EgressSourceCertSpecApplyConfiguration {
	return &EgressSourceCertSpecApplyConfiguration{}
}

// WithSerialNumber sets the SerialNumber field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SerialNumber field is set to the value of the last call.
func (b *EgressSourceCertSpecApplyConfiguration) WithSerialNumber(value int) *EgressSourceCertSpecApplyConfiguration {
	b.SerialNumber = &value
	return b
}

// WithSubjectAltNames adds the given value to the SubjectAltNames field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the SubjectAltNames field.
func (b *EgressSourceCertSpecApplyConfiguration) WithSubjectAltNames(values ...string) *EgressSourceCertSpecApplyConfiguration {
	for i := range values {
		b.SubjectAltNames = append(b.SubjectAltNames, values[i])
	}
	return b
}

// WithExpiration sets the Expiration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Expiration field is set to the value of the last call.
func (b *EgressSourceCertSpecApplyConfiguration) WithExpiration(value string) *EgressSourceCertSpecApplyConfiguration {
	b.Expiration = &value
	return b
}

// WithSecret sets the Secret field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Secret field is set to the value of the last call.
func (b *EgressSourceCertSpecApplyConfiguration) WithSecret(value v1.SecretReference) *EgressSourceCertSpecApplyConfiguration {
	b.Secret = &value
	return b
}
