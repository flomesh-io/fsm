/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha3

import (
	v1alpha3 "github.com/flomesh-io/fsm/pkg/apis/config/v1alpha3"
)

// FLBSpecApplyConfiguration represents an declarative configuration of the FLBSpec type for use
// with apply.
type FLBSpecApplyConfiguration struct {
	Enabled      *bool                     `json:"enabled,omitempty"`
	StrictMode   *bool                     `json:"strictMode,omitempty"`
	UpstreamMode *v1alpha3.FLBUpstreamMode `json:"upstreamMode,omitempty"`
	SecretName   *string                   `json:"secretName,omitempty"`
}

// FLBSpecApplyConfiguration constructs an declarative configuration of the FLBSpec type for use with
// apply.
func FLBSpec() *FLBSpecApplyConfiguration {
	return &FLBSpecApplyConfiguration{}
}

// WithEnabled sets the Enabled field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enabled field is set to the value of the last call.
func (b *FLBSpecApplyConfiguration) WithEnabled(value bool) *FLBSpecApplyConfiguration {
	b.Enabled = &value
	return b
}

// WithStrictMode sets the StrictMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StrictMode field is set to the value of the last call.
func (b *FLBSpecApplyConfiguration) WithStrictMode(value bool) *FLBSpecApplyConfiguration {
	b.StrictMode = &value
	return b
}

// WithUpstreamMode sets the UpstreamMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UpstreamMode field is set to the value of the last call.
func (b *FLBSpecApplyConfiguration) WithUpstreamMode(value v1alpha3.FLBUpstreamMode) *FLBSpecApplyConfiguration {
	b.UpstreamMode = &value
	return b
}

// WithSecretName sets the SecretName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SecretName field is set to the value of the last call.
func (b *FLBSpecApplyConfiguration) WithSecretName(value string) *FLBSpecApplyConfiguration {
	b.SecretName = &value
	return b
}
