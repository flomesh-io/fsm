/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha3

// ConnectorGatewaySpecApplyConfiguration represents an declarative configuration of the ConnectorGatewaySpec type for use
// with apply.
type ConnectorGatewaySpecApplyConfiguration struct {
	ClusterIP       *string `json:"clusterIP,omitempty"`
	ExternalIP      *string `json:"externalIP,omitempty"`
	IngressAddr     *string `json:"ingressAddr,omitempty"`
	IngressHTTPPort *uint   `json:"ingressHTTPPort,omitempty"`
	IngressGRPCPort *uint   `json:"ingressGRPCPort,omitempty"`
	EgressAddr      *string `json:"egressAddr,omitempty"`
	EgressHTTPPort  *uint   `json:"egressHTTPPort,omitempty"`
	EgressGRPCPort  *uint   `json:"egressGRPCPort,omitempty"`
}

// ConnectorGatewaySpecApplyConfiguration constructs an declarative configuration of the ConnectorGatewaySpec type for use with
// apply.
func ConnectorGatewaySpec() *ConnectorGatewaySpecApplyConfiguration {
	return &ConnectorGatewaySpecApplyConfiguration{}
}

// WithClusterIP sets the ClusterIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterIP field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithClusterIP(value string) *ConnectorGatewaySpecApplyConfiguration {
	b.ClusterIP = &value
	return b
}

// WithExternalIP sets the ExternalIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ExternalIP field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithExternalIP(value string) *ConnectorGatewaySpecApplyConfiguration {
	b.ExternalIP = &value
	return b
}

// WithIngressAddr sets the IngressAddr field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IngressAddr field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithIngressAddr(value string) *ConnectorGatewaySpecApplyConfiguration {
	b.IngressAddr = &value
	return b
}

// WithIngressHTTPPort sets the IngressHTTPPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IngressHTTPPort field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithIngressHTTPPort(value uint) *ConnectorGatewaySpecApplyConfiguration {
	b.IngressHTTPPort = &value
	return b
}

// WithIngressGRPCPort sets the IngressGRPCPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IngressGRPCPort field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithIngressGRPCPort(value uint) *ConnectorGatewaySpecApplyConfiguration {
	b.IngressGRPCPort = &value
	return b
}

// WithEgressAddr sets the EgressAddr field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EgressAddr field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithEgressAddr(value string) *ConnectorGatewaySpecApplyConfiguration {
	b.EgressAddr = &value
	return b
}

// WithEgressHTTPPort sets the EgressHTTPPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EgressHTTPPort field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithEgressHTTPPort(value uint) *ConnectorGatewaySpecApplyConfiguration {
	b.EgressHTTPPort = &value
	return b
}

// WithEgressGRPCPort sets the EgressGRPCPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EgressGRPCPort field is set to the value of the last call.
func (b *ConnectorGatewaySpecApplyConfiguration) WithEgressGRPCPort(value uint) *ConnectorGatewaySpecApplyConfiguration {
	b.EgressGRPCPort = &value
	return b
}
