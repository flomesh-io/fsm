/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha3

// FeatureFlagsApplyConfiguration represents an declarative configuration of the FeatureFlags type for use
// with apply.
type FeatureFlagsApplyConfiguration struct {
	EnableEgressPolicy                    *bool `json:"enableEgressPolicy,omitempty"`
	EnableSnapshotCacheMode               *bool `json:"enableSnapshotCacheMode,omitempty"`
	EnableAsyncProxyServiceMapping        *bool `json:"enableAsyncProxyServiceMapping,omitempty"`
	EnableIngressBackendPolicy            *bool `json:"enableIngressBackendPolicy,omitempty"`
	EnableAccessControlPolicy             *bool `json:"enableAccessControlPolicy,omitempty"`
	EnableAccessCertPolicy                *bool `json:"enableAccessCertPolicy,omitempty"`
	EnableSidecarActiveHealthChecks       *bool `json:"enableSidecarActiveHealthChecks,omitempty"`
	EnableRetryPolicy                     *bool `json:"enableRetryPolicy,omitempty"`
	EnablePluginPolicy                    *bool `json:"enablePluginPolicy,omitempty"`
	EnableAutoDefaultRoute                *bool `json:"enableAutoDefaultRoute,omitempty"`
	EnableValidateGatewayListenerHostname *bool `json:"enableValidateGatewayListenerHostname,omitempty"`
	EnableValidateHTTPRouteHostnames      *bool `json:"enableValidateHTTPRouteHostnames,omitempty"`
	EnableValidateGRPCRouteHostnames      *bool `json:"enableValidateGRPCRouteHostnames,omitempty"`
	EnableValidateTLSRouteHostnames       *bool `json:"enableValidateTLSRouteHostnames,omitempty"`
	EnableGatewayAgentService             *bool `json:"enableGatewayAgentService,omitempty"`
	EnableGatewayProxyTag                 *bool `json:"enableGatewayProxyTag,omitempty"`
}

// FeatureFlagsApplyConfiguration constructs an declarative configuration of the FeatureFlags type for use with
// apply.
func FeatureFlags() *FeatureFlagsApplyConfiguration {
	return &FeatureFlagsApplyConfiguration{}
}

// WithEnableEgressPolicy sets the EnableEgressPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableEgressPolicy field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableEgressPolicy(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableEgressPolicy = &value
	return b
}

// WithEnableSnapshotCacheMode sets the EnableSnapshotCacheMode field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableSnapshotCacheMode field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableSnapshotCacheMode(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableSnapshotCacheMode = &value
	return b
}

// WithEnableAsyncProxyServiceMapping sets the EnableAsyncProxyServiceMapping field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableAsyncProxyServiceMapping field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableAsyncProxyServiceMapping(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableAsyncProxyServiceMapping = &value
	return b
}

// WithEnableIngressBackendPolicy sets the EnableIngressBackendPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableIngressBackendPolicy field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableIngressBackendPolicy(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableIngressBackendPolicy = &value
	return b
}

// WithEnableAccessControlPolicy sets the EnableAccessControlPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableAccessControlPolicy field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableAccessControlPolicy(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableAccessControlPolicy = &value
	return b
}

// WithEnableAccessCertPolicy sets the EnableAccessCertPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableAccessCertPolicy field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableAccessCertPolicy(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableAccessCertPolicy = &value
	return b
}

// WithEnableSidecarActiveHealthChecks sets the EnableSidecarActiveHealthChecks field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableSidecarActiveHealthChecks field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableSidecarActiveHealthChecks(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableSidecarActiveHealthChecks = &value
	return b
}

// WithEnableRetryPolicy sets the EnableRetryPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableRetryPolicy field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableRetryPolicy(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableRetryPolicy = &value
	return b
}

// WithEnablePluginPolicy sets the EnablePluginPolicy field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnablePluginPolicy field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnablePluginPolicy(value bool) *FeatureFlagsApplyConfiguration {
	b.EnablePluginPolicy = &value
	return b
}

// WithEnableAutoDefaultRoute sets the EnableAutoDefaultRoute field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableAutoDefaultRoute field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableAutoDefaultRoute(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableAutoDefaultRoute = &value
	return b
}

// WithEnableValidateGatewayListenerHostname sets the EnableValidateGatewayListenerHostname field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableValidateGatewayListenerHostname field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableValidateGatewayListenerHostname(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableValidateGatewayListenerHostname = &value
	return b
}

// WithEnableValidateHTTPRouteHostnames sets the EnableValidateHTTPRouteHostnames field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableValidateHTTPRouteHostnames field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableValidateHTTPRouteHostnames(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableValidateHTTPRouteHostnames = &value
	return b
}

// WithEnableValidateGRPCRouteHostnames sets the EnableValidateGRPCRouteHostnames field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableValidateGRPCRouteHostnames field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableValidateGRPCRouteHostnames(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableValidateGRPCRouteHostnames = &value
	return b
}

// WithEnableValidateTLSRouteHostnames sets the EnableValidateTLSRouteHostnames field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableValidateTLSRouteHostnames field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableValidateTLSRouteHostnames(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableValidateTLSRouteHostnames = &value
	return b
}

// WithEnableGatewayAgentService sets the EnableGatewayAgentService field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableGatewayAgentService field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableGatewayAgentService(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableGatewayAgentService = &value
	return b
}

// WithEnableGatewayProxyTag sets the EnableGatewayProxyTag field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EnableGatewayProxyTag field is set to the value of the last call.
func (b *FeatureFlagsApplyConfiguration) WithEnableGatewayProxyTag(value bool) *FeatureFlagsApplyConfiguration {
	b.EnableGatewayProxyTag = &value
	return b
}
