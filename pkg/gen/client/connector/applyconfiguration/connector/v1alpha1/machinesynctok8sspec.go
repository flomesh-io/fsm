/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// MachineSyncToK8SSpecApplyConfiguration represents an declarative configuration of the MachineSyncToK8SSpec type for use
// with apply.
type MachineSyncToK8SSpecApplyConfiguration struct {
	Enable      *bool                         `json:"enable,omitempty"`
	ClusterId   *string                       `json:"clusterId,omitempty"`
	PassingOnly *bool                         `json:"passingOnly,omitempty"`
	FilterLabel *string                       `json:"filterLabel,omitempty"`
	PrefixLabel *string                       `json:"prefixLabel,omitempty"`
	SuffixLabel *string                       `json:"suffixLabel,omitempty"`
	WithGateway *C2KGatewayApplyConfiguration `json:"withGateway,omitempty"`
}

// MachineSyncToK8SSpecApplyConfiguration constructs an declarative configuration of the MachineSyncToK8SSpec type for use with
// apply.
func MachineSyncToK8SSpec() *MachineSyncToK8SSpecApplyConfiguration {
	return &MachineSyncToK8SSpecApplyConfiguration{}
}

// WithEnable sets the Enable field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Enable field is set to the value of the last call.
func (b *MachineSyncToK8SSpecApplyConfiguration) WithEnable(value bool) *MachineSyncToK8SSpecApplyConfiguration {
	b.Enable = &value
	return b
}

// WithClusterId sets the ClusterId field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterId field is set to the value of the last call.
func (b *MachineSyncToK8SSpecApplyConfiguration) WithClusterId(value string) *MachineSyncToK8SSpecApplyConfiguration {
	b.ClusterId = &value
	return b
}

// WithPassingOnly sets the PassingOnly field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PassingOnly field is set to the value of the last call.
func (b *MachineSyncToK8SSpecApplyConfiguration) WithPassingOnly(value bool) *MachineSyncToK8SSpecApplyConfiguration {
	b.PassingOnly = &value
	return b
}

// WithFilterLabel sets the FilterLabel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FilterLabel field is set to the value of the last call.
func (b *MachineSyncToK8SSpecApplyConfiguration) WithFilterLabel(value string) *MachineSyncToK8SSpecApplyConfiguration {
	b.FilterLabel = &value
	return b
}

// WithPrefixLabel sets the PrefixLabel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the PrefixLabel field is set to the value of the last call.
func (b *MachineSyncToK8SSpecApplyConfiguration) WithPrefixLabel(value string) *MachineSyncToK8SSpecApplyConfiguration {
	b.PrefixLabel = &value
	return b
}

// WithSuffixLabel sets the SuffixLabel field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SuffixLabel field is set to the value of the last call.
func (b *MachineSyncToK8SSpecApplyConfiguration) WithSuffixLabel(value string) *MachineSyncToK8SSpecApplyConfiguration {
	b.SuffixLabel = &value
	return b
}

// WithWithGateway sets the WithGateway field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the WithGateway field is set to the value of the last call.
func (b *MachineSyncToK8SSpecApplyConfiguration) WithWithGateway(value *C2KGatewayApplyConfiguration) *MachineSyncToK8SSpecApplyConfiguration {
	b.WithGateway = value
	return b
}
