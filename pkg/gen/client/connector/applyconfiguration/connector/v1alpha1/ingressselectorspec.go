/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/flomesh-io/fsm/pkg/apis/connector/v1alpha1"
)

// IngressSelectorSpecApplyConfiguration represents an declarative configuration of the IngressSelectorSpec type for use
// with apply.
type IngressSelectorSpecApplyConfiguration struct {
	IPSelector *v1alpha1.AddrSelector `json:"ipSelector,omitempty"`
	HTTPPort   *int32                 `json:"httpPort,omitempty"`
	GRPCPort   *int32                 `json:"grpcPort,omitempty"`
}

// IngressSelectorSpecApplyConfiguration constructs an declarative configuration of the IngressSelectorSpec type for use with
// apply.
func IngressSelectorSpec() *IngressSelectorSpecApplyConfiguration {
	return &IngressSelectorSpecApplyConfiguration{}
}

// WithIPSelector sets the IPSelector field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IPSelector field is set to the value of the last call.
func (b *IngressSelectorSpecApplyConfiguration) WithIPSelector(value v1alpha1.AddrSelector) *IngressSelectorSpecApplyConfiguration {
	b.IPSelector = &value
	return b
}

// WithHTTPPort sets the HTTPPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HTTPPort field is set to the value of the last call.
func (b *IngressSelectorSpecApplyConfiguration) WithHTTPPort(value int32) *IngressSelectorSpecApplyConfiguration {
	b.HTTPPort = &value
	return b
}

// WithGRPCPort sets the GRPCPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GRPCPort field is set to the value of the last call.
func (b *IngressSelectorSpecApplyConfiguration) WithGRPCPort(value int32) *IngressSelectorSpecApplyConfiguration {
	b.GRPCPort = &value
	return b
}
