/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ClusterSpecApplyConfiguration represents an declarative configuration of the ClusterSpec type for use
// with apply.
type ClusterSpecApplyConfiguration struct {
	Region            *string `json:"region,omitempty"`
	Zone              *string `json:"zone,omitempty"`
	Group             *string `json:"group,omitempty"`
	GatewayHost       *string `json:"gatewayHost,omitempty"`
	GatewayPort       *int32  `json:"gatewayPort,omitempty"`
	Kubeconfig        *string `json:"kubeconfig,omitempty"`
	FsmMeshConfigName *string `json:"fsmMeshConfigName,omitempty"`
	FsmNamespace      *string `json:"fsmNamespace,omitempty"`
}

// ClusterSpecApplyConfiguration constructs an declarative configuration of the ClusterSpec type for use with
// apply.
func ClusterSpec() *ClusterSpecApplyConfiguration {
	return &ClusterSpecApplyConfiguration{}
}

// WithRegion sets the Region field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Region field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithRegion(value string) *ClusterSpecApplyConfiguration {
	b.Region = &value
	return b
}

// WithZone sets the Zone field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Zone field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithZone(value string) *ClusterSpecApplyConfiguration {
	b.Zone = &value
	return b
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithGroup(value string) *ClusterSpecApplyConfiguration {
	b.Group = &value
	return b
}

// WithGatewayHost sets the GatewayHost field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GatewayHost field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithGatewayHost(value string) *ClusterSpecApplyConfiguration {
	b.GatewayHost = &value
	return b
}

// WithGatewayPort sets the GatewayPort field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the GatewayPort field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithGatewayPort(value int32) *ClusterSpecApplyConfiguration {
	b.GatewayPort = &value
	return b
}

// WithKubeconfig sets the Kubeconfig field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kubeconfig field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithKubeconfig(value string) *ClusterSpecApplyConfiguration {
	b.Kubeconfig = &value
	return b
}

// WithFsmMeshConfigName sets the FsmMeshConfigName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FsmMeshConfigName field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithFsmMeshConfigName(value string) *ClusterSpecApplyConfiguration {
	b.FsmMeshConfigName = &value
	return b
}

// WithFsmNamespace sets the FsmNamespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FsmNamespace field is set to the value of the last call.
func (b *ClusterSpecApplyConfiguration) WithFsmNamespace(value string) *ClusterSpecApplyConfiguration {
	b.FsmNamespace = &value
	return b
}
