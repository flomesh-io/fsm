name: Build and Push Docker Images

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      id:
        required: true
        type: string
      image:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      context:
        required: false
        type: string
        default: .
      platforms:
        required: false
        type: string
        default: linux/amd64,linux/arm64
      package_helm_charts:
        required: false
        type: boolean
        default: false
      distroless_tag:
        required: false
        type: string
        default: nonroot

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      VERSION: ${{ inputs.version }}
      BUILD_DATE_VAR: 'github.com/flomesh-io/fsm/pkg/version.BuildDate'
      BUILD_VERSION_VAR: 'github.com/flomesh-io/fsm/pkg/version.Version'
      BUILD_GITCOMMIT_VAR: 'github.com/flomesh-io/fsm/pkg/version.GitCommit'
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.RELEASE_DOCKER_USER }}
          password: ${{ secrets.RELEASE_DOCKER_PASS }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        id: setup-go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false

      - name: Package Helm Charts
        if: ${{ inputs.package_helm_charts == true }}
        run: make charts-tgz

      - name: Docker meta - ${{ inputs.id }}
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v5.7.0
        with:
          images: ${{ secrets.RELEASE_REGISTRY }}/${{ inputs.image }}
          tags: |
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=sha,format=short
          flavor: |
            latest=auto

      - name: Get Build Info
        run: |
          echo "BUILD_DATE=$(date +%Y-%m-%d-%H:%M)" >> $GITHUB_ENV
          echo "GIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build and Push - ${{ inputs.id }}
        uses: docker/build-push-action@v6.15.0
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ inputs.platforms }}
          build-args: |
            GO_VERSION=${{ steps.setup-go.outputs.go-version }}
            LDFLAGS=-X ${{ env.BUILD_DATE_VAR }}=${{ env.BUILD_DATE }} -X ${{ env.BUILD_VERSION_VAR }}=${{ env.VERSION }} -X ${{ env.BUILD_GITCOMMIT_VAR }}=${{ env.GIT_SHA }} -s -w
            DISTROLESS_TAG=${{ inputs.distroless_tag }}
            BINARY=${{ inputs.id }}
          push: ${{ (github.event_name != 'pull_request' && (startsWith(github.ref, 'refs/tags/v') || github.ref == format('refs/heads/{0}', github.event.repository.default_branch) )) }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}