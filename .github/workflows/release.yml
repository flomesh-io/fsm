name: Release
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  version:
    name: Set Version from git ref
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        run: echo "::set-output name=version::$(sed 's#^refs/tags/\(.*\)#\1#' <<< '${{ github.ref }}')"

  binaries:
    name: Binaries
    runs-on: ubuntu-latest
    needs: version
    env:
      VERSION: ${{ needs.version.outputs.version }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      HOMEBREW_RELEASE_PAT: ${{ secrets.HOMEBREW_RELEASE_PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Generate Release Notes
        run: scripts/release-notes.sh $VERSION > /tmp/release-notes.md
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean --parallelism 5 --release-notes /tmp/release-notes.md --verbose

  images:
    name: Docker Images
    needs: version
    strategy:
      matrix:
        id: [ "curl", "sidecar-init", "controller", "injector", "connector", "crds", "bootstrap", "preinstall", "healthcheck", "xnetmgmt", "ingress", "gateway" ]
    uses: ./.github/workflows/docker-image.yml
    with:
      id: ${{ matrix.id }}
      version: ${{ needs.version.outputs.version }}
      image: ${{ secrets.RELEASE_REGISTRY }}/fsm-${{ matrix.id }}
      dockerfile: ./dockerfiles/Dockerfile.fsm-${{ matrix.id }}
      package_helm_charts: true
    secrets: inherit

  demo-images:
    name: Demo Docker Images
    needs: version
    strategy:
      matrix:
        id: [ "bookbuyer", "bookthief", "bookstore", "bookwarehouse", "tcp-echo-server", "tcp-client" ]
    uses: ./.github/workflows/docker-image.yml
    with:
      id: ${{ matrix.id }}
      version: ${{ needs.version.outputs.version }}
      image: ${{ secrets.RELEASE_REGISTRY }}/fsm-demo-${{ matrix.id }}
      dockerfile: ./dockerfiles/Dockerfile.demo
    secrets: inherit

  xnet:
    name: Trigger Xnet Release
    runs-on: ubuntu-latest
    needs: version
    env:
      VERSION: ${{ needs.version.outputs.version }}
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.REPOSITORY_DISPATCH_PAT }}
          repository: flomesh-io/xnet
          event-type: fsm-release
          client-payload: '{"version": "${{ env.VERSION }}"}'