run:
  tests: true
  timeout: 20m
  skip-dirs:
    - pkg/gen
  skip-files:
    - "zz_generated.deepcopy.go$"

linters:
  enable:
    - goconst
    - gocyclo
    - gofmt
    - goimports
    - gosec
    - govet
    - misspell
    - revive
    - unused
    - whitespace

linters-settings:
  goimports:
    local-prefixes: github.com/flomesh-io/fsm

issues:
  exclude-rules:
    # Ignore error for ginkgo and gomega dot imports
    - linters:
        - revive
      source: ". \"github.com/onsi/(ginkgo|gomega)\""
      text: "dot imports"
    # Ignore error for test framework imports
    - linters:
        - revive
      source: ". \"github.com/flomesh-io/fsm/tests/framework\""
      text: "dot imports"
    # Exclude staticcheck messages for deprecated function, variable or constant
    # This causes issues with package github.com/golang/protobuf/proto
    - linters:
        - staticcheck
      text: "SA1019:"
    - linters:
        - gosec
      text: "G101:"
  exclude-use-default: false

# output configuration options
output:
  # Format: colored-line-number|line-number|json|colored-tab|tab|checkstyle|code-climate|junit-xml|github-actions|teamcity
  #
  # Multiple can be specified by separating them by comma, output can be provided
  # for each of them by separating format name and path by colon symbol.
  # Output path can be either `stdout`, `stderr` or path to the file to write to.
  # Example: "checkstyle:report.xml,json:stdout,colored-line-number"
  #
  # Default: colored-line-number
  format: colored-line-number
  # Print lines of code with issue.
  # Default: true
  print-issued-lines: true
  # Print linter name in the end of issue text.
  # Default: true
  print-linter-name: true
  # Make issues output unique by line.
  # Default: true
  uniq-by-line: false
  # Add a prefix to the output file references.
  # Default is no prefix.
  path-prefix: ""
  # Sort results by: filepath, line and column.
  sort-results: false

